{"version":3,"sources":["components/Typography.js","components/Page.js","utils/colors.js","utils/demos.js","../node_modules/faker/lib/random.js","../node_modules/faker/vendor/mersenne.js","../node_modules/lodash.tonumber/index.js","../node_modules/reactstrap/es/Progress.js","pages/ExecutionLabPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","randomNum","faker_lib_random__WEBPACK_IMPORTED_MODULE_0__","faker_lib_random__WEBPACK_IMPORTED_MODULE_0___default","n","min","max","random","number","mersenne","module","faker","seed","Array","isArray","seed_array","this","options","precision","Math","floor","rand","arrayElement","array","objectElement","object","field","foo","too","keys","uuid","self","replace","placeholder","toString","boolean","word","randomWordMethod","fake","words","count","i","push","join","image","locale","locales","alphaNumeric","wholeString","MersenneTwister19937","N","M","UPPER_MASK","mt","mti","unsigned32","n1","addition32","n2","multiplication32","sum","init_genrand","s","init_by_array","init_key","key_length","j","k","dbg","mag01","genrand_int32","y","kk","genrand_int31","genrand_real1","genrand_real2","genrand_real3","genrand_res53","exports","gen","Date","getTime","S","Error","A","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","objectToString","prototype","isObject","value","isObjectLike","call","isSymbol","other","valueOf","isBinary","test","slice","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","lodash_tonumber__WEBPACK_IMPORTED_MODULE_5__","lodash_tonumber__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","propTypes","node","bar","bool","multi","oneOfType","string","animated","striped","color","barClassName","cssModule","Progress","props","attributes","percent","progressClasses","progressBarClasses","ProgressBar","style","width","role","aria-valuenow","aria-valuemin","aria-valuemax","APIBasePath","APICon","APIURL","ReportPublishPath","ReportURL","GetLineChart","Component","summaryPass","summaryFail","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_8__","Options","option","react__WEBPACK_IMPORTED_MODULE_10___default","Environment","executionlabpage","_this","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","handleOnSelect","row","isSelect","setState","selected","state","id","filter","x","handleOnSelectAll","rows","ids","r","toggle","modalType","modal","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","isLoaded","tabIndex","ENV","ConfigurationFile","DefaultEnvironment","Browser","DefaultBrowser","screenshot","runAt","threadCount","EmailTrigger","FromEmail","FromPassword","ReceiverEmail","checkFromEmai","checkPassword","checkRecemail","testSuiteResponce","testSuiteData","modalValidationText","showProgressBar","showProgressText","totalexecutedTestcasen","scriptResponce","wait","allModuleName","allModule","allPassModuleWise","allFailModuleWise","allHTMLHyperlink","ExecutionSuitePath","showThreadCountLabel","showThreadCountValue","fetch","then","res","json","ReportsPath","trim","executionenv","includes","open","ModuleName","allitem","GetListvalueFromJsonResponce","jstestStepData","Item","stepid","allList","modulewise","TestID","TestName","moduleName","testid","testcasename","status","_this2","email","From","PasswordUI","Receiver","validationMessage","totalselectedTestScript","executableTestscript","TotalPass","TotalFail","GraphItem","StatusGraph","scriptcounter","jstestStepDatacollection","totalthred","FreeNodeCount","ListItem","checkvalue","TotalItemCount","toLowerCase","GetItemCountFromList","htmlLinkList","En","Br","Sc","Ru","HubName","HUBMachineName","portNumber","HUBPort","_loop","delayAPI","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","Delayresponse","Delayjson","Mo","testID","testName","ItemList","checkStatus","API","wrap","_context3","prev","next","sent","success","console","log","_ref3","_callee2","response","reportPath","testhtml","duration","Itemmodule","pushPass","pushFail","modulefound","_i3","modulePass","moduleFail","checkstatus","postjson","requestOptions","_context2","htmlPath","testRunDuration","abrupt","split","JSON","stringify","method","headers","Accept","Content-type","body","_ref4","_callee","ORResponse","ORJson","HtmlPath","_context","testSuitePath","stop","apply","TestSuiteandSummary","request","Delayrequest","event","target","onchangeenvvalue","_React$createElement","_this3","selectRow","mode","onSelect","onSelectAll","react_loader_spinner__WEBPACK_IMPORTED_MODULE_17___default","height","timeout","testSuitecolumns","dataField","text","headerStyle","textFilter","events","onClick","column","columnIndex","rowIndex","testscriptStatus","getRowId","newValue","components_Page__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","lg","md","sm","xs","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","reactstrap__WEBPACK_IMPORTED_MODULE_23__","reactstrap__WEBPACK_IMPORTED_MODULE_24__","col","reactstrap__WEBPACK_IMPORTED_MODULE_25__","for","reactstrap__WEBPACK_IMPORTED_MODULE_26__","onChange","updateENV","bind","CommonTestData","updateBrowser","updateScreenshot","updateRunAt","visibility","updateThreadCount","updateEmailOption","invalid","UpdateFromEmail","UpdatePassword","UpdateRecieverEmail","reactstrap__WEBPACK_IMPORTED_MODULE_27__","LoadallTestscripts","ExecuteTestScripts","reactstrap__WEBPACK_IMPORTED_MODULE_28__","reactstrap__WEBPACK_IMPORTED_MODULE_29__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_30__","reactstrap__WEBPACK_IMPORTED_MODULE_31__","reactstrap__WEBPACK_IMPORTED_MODULE_32__","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_33___default","keyField","columns","hover","condensed","pagination","paginationFactory","sizePerPage","hideSizePerPage","hidePageListOnlyOnePage","filterFactory","OpenTestSummaryFile","react_chartjs_2__WEBPACK_IMPORTED_MODULE_16__","React"],"mappings":"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","file":"static/js/8.c8e38d8b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import random from 'faker/lib/random';\n\nexport const randomNum = (min = 0, max = 1000) => {\n  return random().number({ min, max });\n};\n","var mersenne = require('../vendor/mersenne');\n/**\n *\n * @namespace faker.random\n */\n\n\nfunction Random(faker, seed) {\n  // Use a user provided seed if it exists\n  if (seed) {\n    if (Array.isArray(seed) && seed.length) {\n      mersenne.seed_array(seed);\n    } else {\n      mersenne.seed(seed);\n    }\n  }\n  /**\n   * returns a single random number based on a max number or range\n   *\n   * @method faker.random.number\n   * @param {mixed} options\n   */\n\n\n  this.number = function (options) {\n    if (typeof options === \"number\") {\n      options = {\n        max: options\n      };\n    }\n\n    options = options || {};\n\n    if (typeof options.min === \"undefined\") {\n      options.min = 0;\n    }\n\n    if (typeof options.max === \"undefined\") {\n      options.max = 99999;\n    }\n\n    if (typeof options.precision === \"undefined\") {\n      options.precision = 1;\n    } // Make the range inclusive of the max value\n\n\n    var max = options.max;\n\n    if (max >= 0) {\n      max += options.precision;\n    }\n\n    var randomNumber = options.precision * Math.floor(mersenne.rand(max / options.precision, options.min / options.precision));\n    return randomNumber;\n  };\n  /**\n   * takes an array and returns a random element of the array\n   *\n   * @method faker.random.arrayElement\n   * @param {array} array\n   */\n\n\n  this.arrayElement = function (array) {\n    array = array || [\"a\", \"b\", \"c\"];\n    var r = faker.random.number({\n      max: array.length - 1\n    });\n    return array[r];\n  };\n  /**\n   * takes an object and returns the randomly key or value\n   *\n   * @method faker.random.objectElement\n   * @param {object} object\n   * @param {mixed} field\n   */\n\n\n  this.objectElement = function (object, field) {\n    object = object || {\n      \"foo\": \"bar\",\n      \"too\": \"car\"\n    };\n    var array = Object.keys(object);\n    var key = faker.random.arrayElement(array);\n    return field === \"key\" ? key : object[key];\n  };\n  /**\n   * uuid\n   *\n   * @method faker.random.uuid\n   */\n\n\n  this.uuid = function () {\n    var self = this;\n    var RFC4122_TEMPLATE = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n\n    var replacePlaceholders = function replacePlaceholders(placeholder) {\n      var random = self.number({\n        min: 0,\n        max: 15\n      });\n      var value = placeholder == 'x' ? random : random & 0x3 | 0x8;\n      return value.toString(16);\n    };\n\n    return RFC4122_TEMPLATE.replace(/[xy]/g, replacePlaceholders);\n  };\n  /**\n   * boolean\n   *\n   * @method faker.random.boolean\n   */\n\n\n  this.boolean = function () {\n    return !!faker.random.number(1);\n  }; // TODO: have ability to return specific type of word? As in: noun, adjective, verb, etc\n\n  /**\n   * word\n   *\n   * @method faker.random.word\n   * @param {string} type\n   */\n\n\n  this.word = function randomWord(type) {\n    var wordMethods = ['commerce.department', 'commerce.productName', 'commerce.productAdjective', 'commerce.productMaterial', 'commerce.product', 'commerce.color', 'company.catchPhraseAdjective', 'company.catchPhraseDescriptor', 'company.catchPhraseNoun', 'company.bsAdjective', 'company.bsBuzz', 'company.bsNoun', 'address.streetSuffix', 'address.county', 'address.country', 'address.state', 'finance.accountName', 'finance.transactionType', 'finance.currencyName', 'hacker.noun', 'hacker.verb', 'hacker.adjective', 'hacker.ingverb', 'hacker.abbreviation', 'name.jobDescriptor', 'name.jobArea', 'name.jobType']; // randomly pick from the many faker methods that can generate words\n\n    var randomWordMethod = faker.random.arrayElement(wordMethods);\n    return faker.fake('{{' + randomWordMethod + '}}');\n  };\n  /**\n   * randomWords\n   *\n   * @method faker.random.words\n   * @param {number} count defaults to a random value between 1 and 3\n   */\n\n\n  this.words = function randomWords(count) {\n    var words = [];\n\n    if (typeof count === \"undefined\") {\n      count = faker.random.number({\n        min: 1,\n        max: 3\n      });\n    }\n\n    for (var i = 0; i < count; i++) {\n      words.push(faker.random.word());\n    }\n\n    return words.join(' ');\n  };\n  /**\n   * locale\n   *\n   * @method faker.random.image\n   */\n\n\n  this.image = function randomImage() {\n    return faker.image.image();\n  };\n  /**\n   * locale\n   *\n   * @method faker.random.locale\n   */\n\n\n  this.locale = function randomLocale() {\n    return faker.random.arrayElement(Object.keys(faker.locales));\n  };\n  /**\n   * alphaNumeric\n   *\n   * @method faker.random.alphaNumeric\n   * @param {number} count defaults to 1\n   */\n\n\n  this.alphaNumeric = function alphaNumeric(count) {\n    if (typeof count === \"undefined\") {\n      count = 1;\n    }\n\n    var wholeString = \"\";\n\n    for (var i = 0; i < count; i++) {\n      wholeString += faker.random.arrayElement([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]);\n    }\n\n    return wholeString;\n  };\n\n  return this;\n}\n\nmodule['exports'] = Random;","// this program is a JavaScript version of Mersenne Twister, with concealment and encapsulation in class,\n// an almost straight conversion from the original program, mt19937ar.c,\n// translated by y. okada on July 17, 2006.\n// and modified a little at july 20, 2006, but there are not any substantial differences.\n// in this program, procedure descriptions and comments of original source code were not removed.\n// lines commented with //c// were originally descriptions of c procedure. and a few following lines are appropriate JavaScript descriptions.\n// lines commented with /* and */ are original comments.\n// lines commented with // are additional comments in this JavaScript version.\n// before using this version, create at least one instance of MersenneTwister19937 class, and initialize the each state, given below in c comments, of all the instances.\n\n/*\n   A C-program for MT19937, with initialization improved 2002/1/26.\n   Coded by Takuji Nishimura and Makoto Matsumoto.\n\n   Before using, initialize the state by using init_genrand(seed)\n   or init_by_array(init_key, key_length).\n\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n\n     1. Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n\n     2. Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n\n     3. The names of its contributors may not be used to endorse or promote\n        products derived from this software without specific prior written\n        permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n   Any feedback is very welcome.\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n*/\nfunction MersenneTwister19937() {\n  /* constants should be scoped inside the class */\n  var N, M, MATRIX_A, UPPER_MASK, LOWER_MASK;\n  /* Period parameters */\n  //c//#define N 624\n  //c//#define M 397\n  //c//#define MATRIX_A 0x9908b0dfUL   /* constant vector a */\n  //c//#define UPPER_MASK 0x80000000UL /* most significant w-r bits */\n  //c//#define LOWER_MASK 0x7fffffffUL /* least significant r bits */\n\n  N = 624;\n  M = 397;\n  MATRIX_A = 0x9908b0df;\n  /* constant vector a */\n\n  UPPER_MASK = 0x80000000;\n  /* most significant w-r bits */\n\n  LOWER_MASK = 0x7fffffff;\n  /* least significant r bits */\n  //c//static unsigned long mt[N]; /* the array for the state vector  */\n  //c//static int mti=N+1; /* mti==N+1 means mt[N] is not initialized */\n\n  var mt = new Array(N);\n  /* the array for the state vector  */\n\n  var mti = N + 1;\n  /* mti==N+1 means mt[N] is not initialized */\n\n  function unsigned32(n1) // returns a 32-bits unsiged integer from an operand to which applied a bit operator.\n  {\n    return n1 < 0 ? (n1 ^ UPPER_MASK) + UPPER_MASK : n1;\n  }\n\n  function subtraction32(n1, n2) // emulates lowerflow of a c 32-bits unsiged integer variable, instead of the operator -. these both arguments must be non-negative integers expressible using unsigned 32 bits.\n  {\n    return n1 < n2 ? unsigned32(0x100000000 - (n2 - n1) & 0xffffffff) : n1 - n2;\n  }\n\n  function addition32(n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator +. these both arguments must be non-negative integers expressible using unsigned 32 bits.\n  {\n    return unsigned32(n1 + n2 & 0xffffffff);\n  }\n\n  function multiplication32(n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator *. these both arguments must be non-negative integers expressible using unsigned 32 bits.\n  {\n    var sum = 0;\n\n    for (var i = 0; i < 32; ++i) {\n      if (n1 >>> i & 0x1) {\n        sum = addition32(sum, unsigned32(n2 << i));\n      }\n    }\n\n    return sum;\n  }\n  /* initializes mt[N] with a seed */\n  //c//void init_genrand(unsigned long s)\n\n\n  this.init_genrand = function (s) {\n    //c//mt[0]= s & 0xffffffff;\n    mt[0] = unsigned32(s & 0xffffffff);\n\n    for (mti = 1; mti < N; mti++) {\n      mt[mti] = //c//(1812433253 * (mt[mti-1] ^ (mt[mti-1] >> 30)) + mti);\n      addition32(multiplication32(1812433253, unsigned32(mt[mti - 1] ^ mt[mti - 1] >>> 30)), mti);\n      /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\n      /* In the previous versions, MSBs of the seed affect   */\n\n      /* only MSBs of the array mt[].                        */\n\n      /* 2002/01/09 modified by Makoto Matsumoto             */\n      //c//mt[mti] &= 0xffffffff;\n\n      mt[mti] = unsigned32(mt[mti] & 0xffffffff);\n      /* for >32 bit machines */\n    }\n  };\n  /* initialize by an array with array-length */\n\n  /* init_key is the array for initializing keys */\n\n  /* key_length is its length */\n\n  /* slight change for C++, 2004/2/26 */\n  //c//void init_by_array(unsigned long init_key[], int key_length)\n\n\n  this.init_by_array = function (init_key, key_length) {\n    //c//int i, j, k;\n    var i, j, k; //c//init_genrand(19650218);\n\n    this.init_genrand(19650218);\n    i = 1;\n    j = 0;\n    k = N > key_length ? N : key_length;\n\n    for (; k; k--) {\n      //c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1664525))\n      //c//\t+ init_key[j] + j; /* non linear */\n      mt[i] = addition32(addition32(unsigned32(mt[i] ^ multiplication32(unsigned32(mt[i - 1] ^ mt[i - 1] >>> 30), 1664525)), init_key[j]), j);\n      mt[i] = //c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */\n      unsigned32(mt[i] & 0xffffffff);\n      i++;\n      j++;\n\n      if (i >= N) {\n        mt[0] = mt[N - 1];\n        i = 1;\n      }\n\n      if (j >= key_length) j = 0;\n    }\n\n    for (k = N - 1; k; k--) {\n      //c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1566083941))\n      //c//- i; /* non linear */\n      mt[i] = subtraction32(unsigned32((dbg = mt[i]) ^ multiplication32(unsigned32(mt[i - 1] ^ mt[i - 1] >>> 30), 1566083941)), i); //c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */\n\n      mt[i] = unsigned32(mt[i] & 0xffffffff);\n      i++;\n\n      if (i >= N) {\n        mt[0] = mt[N - 1];\n        i = 1;\n      }\n    }\n\n    mt[0] = 0x80000000;\n    /* MSB is 1; assuring non-zero initial array */\n  };\n  /* moved outside of genrand_int32() by jwatte 2010-11-17; generate less garbage */\n\n\n  var mag01 = [0x0, MATRIX_A];\n  /* generates a random number on [0,0xffffffff]-interval */\n  //c//unsigned long genrand_int32(void)\n\n  this.genrand_int32 = function () {\n    //c//unsigned long y;\n    //c//static unsigned long mag01[2]={0x0UL, MATRIX_A};\n    var y;\n    /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n    if (mti >= N) {\n      /* generate N words at one time */\n      //c//int kk;\n      var kk;\n      if (mti == N + 1)\n        /* if init_genrand() has not been called, */\n        //c//init_genrand(5489); /* a default initial seed is used */\n        this.init_genrand(5489);\n      /* a default initial seed is used */\n\n      for (kk = 0; kk < N - M; kk++) {\n        //c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);\n        //c//mt[kk] = mt[kk+M] ^ (y >> 1) ^ mag01[y & 0x1];\n        y = unsigned32(mt[kk] & UPPER_MASK | mt[kk + 1] & LOWER_MASK);\n        mt[kk] = unsigned32(mt[kk + M] ^ y >>> 1 ^ mag01[y & 0x1]);\n      }\n\n      for (; kk < N - 1; kk++) {\n        //c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);\n        //c//mt[kk] = mt[kk+(M-N)] ^ (y >> 1) ^ mag01[y & 0x1];\n        y = unsigned32(mt[kk] & UPPER_MASK | mt[kk + 1] & LOWER_MASK);\n        mt[kk] = unsigned32(mt[kk + (M - N)] ^ y >>> 1 ^ mag01[y & 0x1]);\n      } //c//y = (mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK);\n      //c//mt[N-1] = mt[M-1] ^ (y >> 1) ^ mag01[y & 0x1];\n\n\n      y = unsigned32(mt[N - 1] & UPPER_MASK | mt[0] & LOWER_MASK);\n      mt[N - 1] = unsigned32(mt[M - 1] ^ y >>> 1 ^ mag01[y & 0x1]);\n      mti = 0;\n    }\n\n    y = mt[mti++];\n    /* Tempering */\n    //c//y ^= (y >> 11);\n    //c//y ^= (y << 7) & 0x9d2c5680;\n    //c//y ^= (y << 15) & 0xefc60000;\n    //c//y ^= (y >> 18);\n\n    y = unsigned32(y ^ y >>> 11);\n    y = unsigned32(y ^ y << 7 & 0x9d2c5680);\n    y = unsigned32(y ^ y << 15 & 0xefc60000);\n    y = unsigned32(y ^ y >>> 18);\n    return y;\n  };\n  /* generates a random number on [0,0x7fffffff]-interval */\n  //c//long genrand_int31(void)\n\n\n  this.genrand_int31 = function () {\n    //c//return (genrand_int32()>>1);\n    return this.genrand_int32() >>> 1;\n  };\n  /* generates a random number on [0,1]-real-interval */\n  //c//double genrand_real1(void)\n\n\n  this.genrand_real1 = function () {\n    //c//return genrand_int32()*(1.0/4294967295.0);\n    return this.genrand_int32() * (1.0 / 4294967295.0);\n    /* divided by 2^32-1 */\n  };\n  /* generates a random number on [0,1)-real-interval */\n  //c//double genrand_real2(void)\n\n\n  this.genrand_real2 = function () {\n    //c//return genrand_int32()*(1.0/4294967296.0);\n    return this.genrand_int32() * (1.0 / 4294967296.0);\n    /* divided by 2^32 */\n  };\n  /* generates a random number on (0,1)-real-interval */\n  //c//double genrand_real3(void)\n\n\n  this.genrand_real3 = function () {\n    //c//return ((genrand_int32()) + 0.5)*(1.0/4294967296.0);\n    return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n    /* divided by 2^32 */\n  };\n  /* generates a random number on [0,1) with 53-bit resolution*/\n  //c//double genrand_res53(void)\n\n\n  this.genrand_res53 = function () {\n    //c//unsigned long a=genrand_int32()>>5, b=genrand_int32()>>6;\n    var a = this.genrand_int32() >>> 5,\n        b = this.genrand_int32() >>> 6;\n    return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n  };\n  /* These real versions are due to Isaku Wada, 2002/01/09 added */\n\n} //  Exports: Public API\n//  Export the twister class\n\n\nexports.MersenneTwister19937 = MersenneTwister19937; //  Export a simplified function to generate random numbers\n\nvar gen = new MersenneTwister19937();\ngen.init_genrand(new Date().getTime() % 1000000000); // Added max, min range functionality, Marak Squires Sept 11 2014\n\nexports.rand = function (max, min) {\n  if (max === undefined) {\n    min = 0;\n    max = 32768;\n  }\n\n  return Math.floor(gen.genrand_real2() * (max - min) + min);\n};\n\nexports.seed = function (S) {\n  if (typeof S != 'number') {\n    throw new Error(\"seed(S) must take numeric argument; is \" + typeof S);\n  }\n\n  gen.init_genrand(S);\n};\n\nexports.seed_array = function (A) {\n  if (typeof A != 'object') {\n    throw new Error(\"seed_array(A) must take array of numbers; is \" + typeof A);\n  }\n\n  gen.init_by_array(A);\n};","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport toNumber from 'lodash.tonumber';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  max: 100\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\"]);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var ProgressBar = multi ? children : React.createElement(\"div\", {\n    className: progressBarClasses,\n    style: {\n      width: percent + \"%\"\n    },\n    role: \"progressbar\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": max,\n    children: children\n  });\n\n  if (bar) {\n    return ProgressBar;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: progressClasses,\n    children: ProgressBar\n  }));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;","import Page from 'components/Page';\nimport React from 'react';\nimport { randomNum } from 'utils/demos';\nimport { getColor } from 'utils/colors';\nimport CommonTestData from '../TestData/CommonTestData.json';\nimport ConfigurationFile from '../TestData/Configuration.json';\nimport APICon from '../TestData/ServerAddress.json';\nimport { Pie, Bar,Line} from 'react-chartjs-2';\nimport Loader from 'react-loader-spinner';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Table,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Progress,\n} from 'reactstrap';\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport cellEditFactory,{Type} from 'react-bootstrap-table2-editor';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nvar APIBasePath =APICon.APIURL;\nvar ReportPublishPath =APICon.ReportURL;\n\nfunction GetPieChart(summaryPass,summaryFail) {\n  return {\n    datasets: [\n      {\n        data: [summaryPass, summaryFail],\n        backgroundColor: [\n          getColor('success'),\n          getColor('danger'),\n        ],\n      },\n    ],\n    labels: ['PASS', 'FAIL'],\n  };\n}\nfunction GetLineChart(Component=[],summaryPass={},summaryFail={}) {\n  return {\n    labels: Component,\n    datasets: [\n      {\n        label: 'PASS',\n        backgroundColor: getColor('success'),\n        borderColor: getColor('success'),\n        borderWidth: 1,\n        data: [\n          ...summaryPass,\n        ],\n      },\n      {\n        label: 'FAIL',\n        backgroundColor: getColor('danger'),\n        borderColor: getColor('danger'),\n        borderWidth: 1,\n        data: [\n          ...summaryFail,\n        ],\n      },\n    ],\n  };\n}\nfunction Options({ options }) {\n    return (\n        options.map(option => \n                    <option key={option.Environment}>                                   \n                    {option.Environment}\n                    </option>)\n                   );\n}\nfunction GetListvalueFromJsonResponce(options) \n{\n  let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n\t));\n\treturn allitem;\n}\n\n\nconst selectRow = {\n  mode: 'checkbox'\n  };\n\nfunction addSpinner()\n{\n  return(\n    <Loader\n       type=\"Puff\"\n       color=\"#00BFFF\"\n       height={50}\n       width={10000}\n       timeout={1200000}\n\n    />\n   );\n}\n\nfunction GetItemCountFromList(ListItem,checkvalue) \n{\n    var TotalItemCount=0;\n    for (let i = 0; i < ListItem.length; i++) \n    {\n      if(ListItem[i].trim().toLowerCase()===checkvalue.trim().toLowerCase())\n      {\n        TotalItemCount= TotalItemCount+1;\n      }\n    }\n    return TotalItemCount;\n}\n\nfunction ExecuteSingleTestScripts(env,browser,screenshot,runat,module,testid,testcasename,hubname,portnumber)\n{\n  \n}\n\nclass executionlabpage extends React.Component{\n  constructor(props)\n  {\n\t\tsuper(props);\n    this.state=\n    {\n      isLoaded: false,\n      tabIndex:0,\n      ENV:ConfigurationFile.DefaultEnvironment,\n      Browser:ConfigurationFile.DefaultBrowser,\n      screenshot :'FOR EACH STEP',\n      runAt :'LOCAL',\n      threadCount :'1',\n      EmailTrigger:'NO',\n      FromEmail:'',\n      FromPassword:'',\n      ReceiverEmail:'',\n      checkFromEmai:false,\n      checkPassword:false,\n      checkRecemail:false,\n      testSuiteResponce:[],\n      testSuiteData: [],\n      modal: false,\n      modalValidationText:'',\n      selected:[],\n      showProgressBar:false,\n      showProgressText:false,\n      totalexecutedTestcasen:0,\n      scriptResponce :'Not Started',\n      wait:false,\n      summaryPass:0,\n      summaryFail:0,\n      //allModule :['PLP','PIP'],\n      allModuleName:[],\n      allModule :[],\n      allPassModuleWise:[],\n      allFailModuleWise:[],\n      allHTMLHyperlink:[],\n      ExecutionSuitePath:'',\n      showThreadCountLabel :true,\n      showThreadCountValue:true,\n    }\n    fetch(APIBasePath+'execution')\n\t\t.then(res=>res.json())\n\t\t.then(json=> {\n\t\t  this.setState({\n        testSuiteResponce:json,\n\t\t  }\n\t\t  )\n    });\n    fetch(APIBasePath+'testcase?moduleName=')\n\t\t.then(res=>res.json())\n\t\t.then(json=> {\n\t\t  this.setState({\n\t\t\tallModuleName:json,\n\t\t  }\n\t\t  )\n\t\t});\n  }\n\n  OpenTestSummaryFile()\n  {\n    var ReportsPath = this.state.ExecutionSuitePath;\n    if(ReportsPath.trim()===\"\")\n    {\n      return;\n    }\n    var executionenv = this.state.ENV;\n    if(ReportsPath.includes(executionenv))\n    {\n      window.open(ReportPublishPath+'TestSuiteSummaryfile/'+executionenv+'/'+ReportsPath);\n    }\n    \n  }\n  LoadallTestscripts()\n  {\n    var ModuleName = GetListvalueFromJsonResponce(this.state.allModuleName)\n   \n    this.setState({allModule:ModuleName});\n    this.setState({showProgressBar:false});\n     this.setState({showProgressText:false});\n    var jstestStepData={};\n    let allitem = []\n    var Item = this.state.testSuiteResponce;\n    Object.keys(Item).map((key) => \n    (\n      allitem.push(key)\n    ))\n    //@ get list\n    var stepid =0;\n    var allList =[]\n    for(let i=1;i<=allitem.length;i++)\n    {\n      var modulewise = Item[allitem[i-1]];\n      \n      for(let j=1;j<=modulewise.length;j++)\n      {\n        stepid =stepid+1;\n        jstestStepData[\"id\"]=stepid;\n        jstestStepData[\"moduleName\"]=allitem[i-1];\n        jstestStepData[\"testid\"]=modulewise[j-1].TestID;\n        jstestStepData[\"testcasename\"]=modulewise[j-1].TestName;\n        jstestStepData[\"status\"]='Not Started';\n        //allList[stepid-1]=jstestStepData;\n        allList.push({id:stepid,moduleName:allitem[i-1],testid:modulewise[j-1].TestID,testcasename:modulewise[j-1].TestName,status:'Not Started'})\n      }\n    }\n    this.setState({testSuiteData:allList});\n    this.setState({selected:[]});\n  }\n\n  ExecuteTestScripts()\n  {\n    this.setState({showProgressBar:false});\n    this.setState({showProgressText:false});\n    this.setState({totalexecutedTestcasen:0});\n     var testscriptCount = this.state.testSuiteData.length;\n    \n     if(testscriptCount===0)\n     {\n      this.setState({modal:true})\n      return this.setState({modalValidationText:'Please Load test scripts before execution.'})\n     }\n     var email= this.state.EmailTrigger;\n     var From = this.state.FromEmail;\n     var PasswordUI = this.state.FromPassword;\n     var Receiver = this.state.ReceiverEmail;\n     var validationMessage='';\n     if(email===\"YES\")\n     {\n        if(From.trim()===\"\")\n        {\n          this.setState({checkFromEmai:true});\n          validationMessage= \"From Email can not be blank.\"\n        }\n        if(PasswordUI.trim()===\"\")\n        {\n          this.setState({checkPassword:true});\n          validationMessage= validationMessage+\"Password can not be blank.\"\n        }\n        if(Receiver.trim()===\"\")\n        {\n          this.setState({checkRecemail:true});\n          validationMessage= validationMessage+\"Receiver Email can not be blank.\"\n        }\n        if(validationMessage.trim() !==\"\")\n        {\n          this.setState({modal:true})\n          return this.setState({modalValidationText:validationMessage})\n        }\n     }\n     var totalselectedTestScript = this.state.selected.length;\n     if(totalselectedTestScript===0)\n     {\n      this.setState({modal:true})\n      return this.setState({modalValidationText:'Please select test script for execution.'})\n     }\n     var executableTestscript = this.state.selected;\n\n     this.setState({showProgressBar:true});\n     this.setState({showProgressText:true});\n     var counter =0;\n     this.setState({summaryPass:0})\n     this.setState({summaryFail:0})\n     var TotalPass=0;\n     var TotalFail =0;\n    \n      //@ set total Pass and Fail\n      var GraphItem = this.state.testSuiteData;\n      for(let i=0;i<GraphItem.length;i++)\n      {\n        var StatusGraph = GraphItem[i].status\n        if(StatusGraph===\"PASS\")\n        {\n          TotalPass=TotalPass+1;\n          this.setState({summaryPass:TotalPass})\n        }\n        if(StatusGraph===\"FAIL\")\n        {\n          TotalFail=TotalFail+1;\n          this.setState({summaryFail:TotalFail})\n        }\n      }\n     var scriptcounter=0;\n     var jstestStepData={};\n     var jstestStepDatacollection={};\n     var totalthred = this.state.threadCount;\n     var FreeNodeCount= [];\n     for(let i=0;i<totalthred;i++)\n     {\n        FreeNodeCount.push('free');\n     }\n     var toatalFreeNode = GetItemCountFromList(FreeNodeCount,\"free\");\n     totalselectedTestScript = this.state.selected.length\n     executableTestscript = this.state.selected;\n     var htmlLinkList=[];\n     var En = this.state.ENV \n     var Br = this.state.Browser;\n     var Sc= this.state.screenshot;\n     var Ru= this.state.runAt;\n     var HubName= ConfigurationFile.HUBMachineName;\n     var portNumber= ConfigurationFile.HUBPort;\n        for(let i=0;i<totalselectedTestScript;i++)\n        {\n         //@ Delay\n         var delayAPI =APIBasePath+'execution?delay=1000';\n         const Delayrequest = async () => \n         {\n          const Delayresponse = await fetch(delayAPI);\n          const Delayjson = await Delayresponse.json();\n          var DelaycheckStatus= Delayjson.success \n          if(DelaycheckStatus===\"PASS\")\n          {\n            \n            var Mo= this.state.testSuiteData[executableTestscript[i]-1].moduleName;\n            var testID =this.state.testSuiteData[executableTestscript[i]-1].testid;\n            var testName= this.state.testSuiteData[executableTestscript[i]-1].testcasename;\n            this.state.testSuiteData[executableTestscript[i]-1].status= 'In-Progress';\n            var ItemList  = this.state.testSuiteData;\n            this.setState({testSuiteData:ItemList});\n            var checkStatus = '';\n            var API = APIBasePath+'execution?module='+Mo+'&testid='+testID+'&testcasename='+testName+'&env='+En+'&browser='+Br+'&runat='+Ru+'&screenshot='+Sc+'&hubmachine='+HubName+'&portnumber='+portNumber;\n            console.log(API);\n            const request = async () => {\n              const response = await fetch(API);\n              const json = await response.json();\n              checkStatus= json.status\n              var reportPath = json.htmlPath\n              htmlLinkList['RowId'+executableTestscript[i]]=reportPath;\n             // this.setState({allHTMLHyperlink:htmlLinkList});\n             var testhtml = this.state.allHTMLHyperlink;\n             testhtml['RowId'+executableTestscript[i]]=reportPath;\n             this.setState({ allHTMLHyperlink: testhtml});\n              var duration = json.testRunDuration\n              if(checkStatus===\"PASS\")\n              {\n                TotalPass=TotalPass+1;\n                this.setState({summaryPass:TotalPass})\n              }\n              if(checkStatus===\"FAIL\")\n              {\n                TotalFail=TotalFail+1;\n                this.setState({summaryFail:TotalFail})\n              }\n              this.state.testSuiteData[executableTestscript[i]-1].status= checkStatus;\n              ItemList  = this.state.testSuiteData;\n              this.setState({testSuiteData:ItemList});\n              //counter= counter+1;\n             // this.setState({totalexecutedTestcasen:counter});\n      \n              //@ Set Graph data\n              var Itemmodule = this.state.allModule;\n              var pushPass =[]\n              var pushFail=[]\n              var modulefound =0;\n              for(let i=0;i<Itemmodule.length;i++)\n              {\n                  var modulePass=0\n                  var moduleFail=0\n                  for(let j=modulefound;j<this.state.testSuiteData.length;j++)\n                  {\n                      var RunTimeModuleName = this.state.testSuiteData[j].moduleName;\n                      if(RunTimeModuleName===Itemmodule[i])\n                      {\n                      var checkstatus = this.state.testSuiteData[j].status\n                      if(checkstatus===\"PASS\")\n                      {\n                        modulePass=modulePass+1;\n                      }\n                      if(checkstatus===\"FAIL\")\n                      {\n                        moduleFail=moduleFail+1;\n                      }\n                      }\n                      else\n                      {\n                        modulefound =j;\n                        break;\n                      }\n                  }\n                  pushPass.push(modulePass);\n                  pushFail.push(moduleFail)\n                }\n                this.setState({allPassModuleWise:pushPass});\n                this.setState({allFailModuleWise:pushFail});\n      \n            //@ send summary Email\n            jstestStepData={};\n            jstestStepData[\"Module\"]=Mo;\n            jstestStepData[\"testid\"]=testID;\n            jstestStepData[\"testcasename\"]=testName;\n            jstestStepData[\"status\"]=checkStatus;\n            reportPath= reportPath.split('\\\\').join('{')\n            jstestStepData[\"reportpath\"]=reportPath;\n            jstestStepData[\"duration\"]=duration;\n            jstestStepDatacollection[i+1]=jstestStepData;\n            scriptcounter=scriptcounter+1\n            if(scriptcounter===totalselectedTestScript)\n            {\n                var postjson = JSON.stringify(jstestStepDatacollection);\n                var requestOptions = \n                {\n                method: 'POST',\n                headers: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n                body: postjson\n                };\n                const TestSuiteandSummary = async () => \n                {\n                  const ORResponse = await fetch(APIBasePath+'execution?env='+En,requestOptions);\n                  const ORJson = await ORResponse.json();\n                  console.log(ORJson.success);\n                  if(ORJson.success.toLowerCase()==='pass')\n                  {\n                    var HtmlPath=ORJson.testSuitePath;\n                    this.setState({ExecutionSuitePath:HtmlPath})\n                  }\n                }\n                TestSuiteandSummary();\n            }\n      \n            }\n            \n            request();\n          }\n        }\n        Delayrequest();\n      }\n    \n  }\n\n  handleOnSelect = (row, isSelect) => {\n    if (isSelect) {\n      this.setState(() => ({\n        selected: [...this.state.selected, row.id]\n      }));\n    } else {\n      this.setState(() => ({\n        selected: this.state.selected.filter(x => x !== row.id)\n      }));\n    }\n  }\n\n  handleOnSelectAll = (isSelect, rows) => {\n    const ids = rows.map(r => r.id);\n    if (isSelect) {\n      this.setState(() => ({\n        selected: ids\n      }));\n    } else {\n      this.setState(() => ({\n        selected: []\n      }));\n    }\n  }\n\n  updateENV(event){\n\t\tvar onchangeenvvalue = event.target.value;\n\t\tthis.setState({ENV : event.target.value})\n    }\n    updateBrowser(event){\n      var onchangeenvvalue = event.target.value;\n      this.setState({Browser : event.target.value})\n      }\n    updateScreenshot(event){\n      var onchangeenvvalue = event.target.value;\n      this.setState({screenshot : event.target.value})\n      }\n    updateRunAt(event)\n    {\n      var onchangeenvvalue = event.target.value;\n       this.setState({runAt : event.target.value})\n       if(onchangeenvvalue.trim()===\"SELENIUM GRID\")\n       {\n          this.setState({showThreadCountLabel:false})\n          this.setState({showThreadCountValue:false})\n       }\n       else\n       {\n        this.setState({showThreadCountLabel:true})\n        this.setState({showThreadCountValue:true})\n       }\n      }\n    updateThreadCount(event){\n      var onchangeenvvalue = event.target.value;\n      this.setState({threadCount : event.target.value})\n      }\n      updateEmailOption(event){\n        var onchangeenvvalue = event.target.value;\n        this.setState({EmailTrigger : event.target.value})\n        }\n      UpdateFromEmail(event)\n      {\n        this.setState({checkFromEmai:false})\n        this.setState({FromEmail : event.target.value})\n      }\n      UpdatePassword(event)\n      {\n        this.setState({checkPassword:false})\n        this.setState({FromPassword : event.target.value})\n      }\n      UpdateRecieverEmail(event)\n      {\n        this.setState({checkRecemail:false})\n        this.setState({ReceiverEmail : event.target.value})\n      }\n\n      toggle = modalType => () => {\n        if (!modalType) {\n          return this.setState({\n          modal: !this.state.modal,\n          });\n        }\n      \n        this.setState({\n          [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n        });\n        };\n        \n\n  render() {\n\n\n    var {isLoaded} = this.state;\n\t  const selectRow = {\n      mode: 'checkbox',\n      selected: this.state.selected,\n      onSelect: this.handleOnSelect,\n      onSelectAll: this.handleOnSelectAll\n      };\n    if(!isLoaded)\n    {\n      addSpinner();\n    }\n    const options = {\n      sizePerPage: 10,\n      hideSizePerPage: true,\n      hidePageListOnlyOnePage: true\n      };\n    const testSuitecolumns = [\n      {\n        dataField: 'id',\n        text: '#',\n        headerStyle: { width: '50px' },\n      },\n      {\n        dataField: 'moduleName',\n        text: 'Module Name',\n        headerStyle: { width: '200px' },\n        filter: textFilter()\n      },\n      {\n        dataField: 'testid',\n        text: 'Test ID',\n        headerStyle: { width: '120px' },\n        filter: textFilter()\n      },\n      {\n        dataField: 'testcasename',\n        text: 'Test Case Name',\n        filter: textFilter()\n      },\n      {\n        dataField: 'status',\n        text: 'Status',\n        events: {\n          onClick: (e, column, columnIndex, row, rowIndex) => {\n            var testscriptStatus = row.status;\n            console.log(row.id);\n            if(testscriptStatus===\"PASS\" || testscriptStatus===\"FAIL\")\n            {\n              var getRowId = 'RowId'+(rowIndex+1);\n              console.log(getRowId);\n              var ReportsPath= this.state.allHTMLHyperlink[getRowId];\n              window.open(ReportsPath);\n            }\n          }\n        },\n        headerStyle: { width: '120px' },\n        filter: textFilter(),\n        style: (newValue) => {\n          if (newValue=== 'FAIL') {\n            return {\n              backgroundColor: '#dc3545'\n            };\n          };\n          if (newValue=== 'PASS') {\n            return {\n              backgroundColor: '#28a745'\n            };\n          };\n        }\n        \n      }\n    ];\n\n  return (\n    <Page title=\"Execution Lab\" breadcrumbs={[{ name: 'Execution Lab', active: true }]}>\n      <Row>\n        <Col lg={4} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Execution Configuration</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Environment*\n                  </Label>\n                  <Col>\n                    <Input type=\"select\" name=\"envlist\" value={this.state.ENV} onChange={this.updateENV.bind(this)}>\n\t\t\t\t\t            <Options options={CommonTestData} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t          <FormGroup col>\n                    <Label for=\"exampleSelect\" sm={5}>\n                      Browser*\n                    </Label>\n                    <Col >\n                    <Input type=\"select\" name=\"browser\" value={this.state.Browser} onChange={this.updateBrowser.bind(this)}>\n\t\t\t\t\t              <option>CHROME</option>\n                        <option>FIREFOX</option>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t        <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    ScreenShot*\n                  </Label>\n                  <Col >\n                    <Input type=\"select\" name=\"screenshot\" value={this.state.screenshot} onChange={this.updateScreenshot.bind(this)}>\n\t\t\t\t          \t<option>FOR EACH STEP</option>\n                    <option>FOR STEP FAILURE</option>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t        <Col lg={3} md={6} sm={6} xs={12}>\n              <Card>\n                <CardHeader>Execution Setup</CardHeader>\n                  <CardBody>\n                     <Form>\n                        <FormGroup col>\n                          <Label for=\"exampleSelect\" sm={6}>\n                             Run at*\n                           </Label>\n                           <Col>\n                            <Input type=\"select\" name=\"runat\" value={this.state.runAt} onChange={this.updateRunAt.bind(this)}>\n\t\t\t\t\t                  <option>LOCAL</option>\n                            <option>SELENIUM GRID</option>\n\t\t\t\t                  \t</Input>\n                          </Col>\n                        </FormGroup>\n\t\t\t\t              <FormGroup col>\n                        <Label style={{visibility: this.state.showThreadCountLabel ? 'visible' : 'hidden' }}  for=\"exampleSelect\" sm={10}>\n                          Thread Count per Machine*\n                         </Label>\n                         <Col >\n                           <Input style={{visibility: this.state.showThreadCountValue ? 'visible' : 'hidden' }} type=\"select\" name=\"threadcount\" value={this.state.threadCount} onChange={this.updateThreadCount.bind(this)}>\n\t\t\t\t                  \t<option>1</option>\n                            <option>2</option>\n\t\t\t\t                  \t<option>3</option>\n                           <option>4</option>\n\t\t\t\t\t                 <option>5</option>\n\t\t\t\t\t                  </Input>\n                        </Col>\n                      </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t<Col lg={5} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Email Configuration</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={5}>\n                    Email Trigger*\n                  </Label>\n                  <Col>\n                    <Input type=\"select\" name=\"email\"  value={this.state.EmailTrigger} onChange={this.updateEmailOption.bind(this)}>\n\t\t\t\t\t            <option>YES</option>\n                      <option>NO</option>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t       <FormGroup col>\n\t\t\t          \t<Label for=\"exampleSelect\" sm={5}>\n                    From Email\n                  </Label>\n                  <Col >\n                    <Input invalid={this.state.checkFromEmai} type=\"input\" value={this.state.FromEmail} onChange={this.UpdateFromEmail.bind(this)} type=\"input\" name=\"fromemail\" placeholder=\"enter your Email Address\"/>\n                  </Col>\n                </FormGroup>{' '}\n\t\t\t\t      <FormGroup col>\n\t\t\t        \t<Label for=\"exampleSelect\" sm={5}>\n                    Password\n                  </Label>\n                  <Col >\n                    <Input invalid={this.state.checkPassword} type=\"input\" value={this.state.FromPassword} onChange={this.UpdatePassword.bind(this)} name=\"fromPassword\" placeholder=\"enter your Password\"/>\n                  </Col>\n                </FormGroup>{' '}\n\t\t\t\t      <FormGroup col>\n\t\t\t\t        <Label for=\"exampleSelect\" sm={5}>\n                    Receiver Email\n                  </Label>\n                 <Col >\n                    <Input invalid={this.state.checkRecemail} type=\"input\" value={this.state.ReceiverEmail} onChange={this.UpdateRecieverEmail.bind(this)} name=\"receiveremail\" placeholder=\"enter your Receiver email\"/>\n                  </Col>\n                </FormGroup>{' '}\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\t  <Row>\n\t  \t<Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Executable Test Scripts\n            <Button onClick={this.LoadallTestscripts.bind(this)} name =\"loadTestSuite\" color=\"primary\">Load Test Scripts</Button>\n            <Button onClick={this.ExecuteTestScripts.bind(this)} name =\"executeTC\" color=\"primary\">Execute Test Scripts</Button>\n             <div  style={{visibility: this.state.showProgressText ? 'visible' : 'hidden' }} className=\"text-center\">{this.state.totalexecutedTestcasen} of {this.state.selected.length}</div>\n              <Progress style={{visibility: this.state.showProgressBar ? 'visible' : 'hidden' }} value= {this.state.totalexecutedTestcasen} max={this.state.selected.length} />\n            <Modal\n                      isOpen={this.state.modal}\n                      toggle={this.toggle()}\n                      className={this.props.className}>\n                      <ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n                      <ModalBody >\n                        {this.state.modalValidationText}\n                      </ModalBody>\n                      <ModalFooter>\n                        <Button color=\"secondary\" onClick={this.toggle()}>\n                          OK\n                        </Button>\n                      </ModalFooter>\n            </Modal>\n              \n            </CardHeader>\n            <CardBody>\n            <BootstrapTable\n              keyField=\"id\"\n              data={ this.state.testSuiteData }\n              columns={ testSuitecolumns }\n              striped\n              hover\n              condensed\n              pagination={ paginationFactory(options) }\n              selectRow={ selectRow }\n              filter={ filterFactory() }\n            />\n            </CardBody>\n          </Card>\n        </Col>\t\t\t\n    </Row>\n\t\t<Row>\n        <Col lg={4} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Total Pass Fail Count</CardHeader>\n\t\t\t        <CardBody onClick={this.OpenTestSummaryFile.bind(this)}>\n              <Pie data={GetPieChart(this.state.summaryPass,this.state.summaryFail)} />\n            </CardBody>\n          </Card>\n        </Col>\n\t\t<Col lg={8} md={6} sm={6} xs={12}>\n\t\t<Card>\n            <CardHeader>Pass Fail Count Module wise</CardHeader>\n\t\t\t      <CardBody>\n            <Bar\n                data={GetLineChart(this.state.allModule,this.state.allPassModuleWise,this.state.allFailModuleWise)}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </Page>\n   );\n}\n};\n\n\nexport default executionlabpage;\n"],"sourceRoot":""}