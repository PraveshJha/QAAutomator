{"version":3,"sources":["components/Typography.js","components/Page.js","utils/colors.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/webpack/buildin/module.js","components/Widget/NumberWidget.js","components/Widget/IconWidget.js","components/Widget/index.js","pages/DashboardPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","module","exports","webpackPolyfill","deprecate","paths","defineProperty","enumerable","get","l","NumberWidget","subtitle","number","color","_ref$progress","progress","value","label","objectWithoutProperties","react_default","Card","body","CardText","CardTitle","IconWidget","bgColor","Icon","icon","iconProps","inverse","CardBody","size","CardSubtitle","Widget_NumberWidget","Widget_IconWidget","APIBasePath","APICon","APIURL","ReportPublishPath","ReportURL","GetPieChart","summaryPass","summaryFail","datasets","data","backgroundColor","labels","GetListvalueFromJsonResponce","options","allitem","keys","push","GetLineChart","Component","borderColor","borderWidth","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_7__","GetBarChart","fill","genLineDataforModuleFail","Options","option","react__WEBPACK_IMPORTED_MODULE_15___default","Environment","DateOptions","ConfigurationFile","DashboardTotalDayCount","TimeOptions","_ref3","DashboardPage","props","_this","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","state","items","summary","isLoaded","dashboardTotalDays","defaultEnv","DefaultEnvironment","ENV","EXECUTIONDATE","DashboardHistoryCount","executionDateList","EXECUTIONHTMLTime","allModule","allModuleName","PassModulewise","allPassModuleWise","FailModulewise","allFailModuleWise","fetch","then","res","json","setState","ModuleName","RunTimeCheck","scrollTo","event","_this2","PreviousEnv","onchangeenvvalue","target","includes","HtmlLastResultResultAPI","_ref4","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","ORResponse","ORJson","htmlfileName","wrap","_context","prev","next","sent","success","toLowerCase","servermessage","open","stop","apply","HTMLLastResult","htmlenv","trim","executionDate","executionTime","Month","Dateformat","split","_this3","_this4","API","_this$state","react_loader_spinner__WEBPACK_IMPORTED_MODULE_8___default","height","width","timeout","tpass","postdetails","totalpass","error","tFail","totalfail","SummaryPass","SummaryFail","test1","testData","finalItem","GetAllModule","test2","GetAllPass","test3","GetAllFail","components_Page__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","lg","md","sm","xs","components_Widget__WEBPACK_IMPORTED_MODULE_10__","try","totaltestscripts","totalcomponents","totalcustomfunction","onClick","OpenHTMLfileForLastResults","bind","lastresult","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","row","reactstrap__WEBPACK_IMPORTED_MODULE_23__","for","reactstrap__WEBPACK_IMPORTED_MODULE_24__","defaultValue","text","onChange","updateENV","CommonTestData","updateExecutionDate","graphPopulateBasedOnExecutionTime","xl","OpenHTMLfilebasedonDateandTime","react_chartjs_2__WEBPACK_IMPORTED_MODULE_11__","scales","xAxes","scaleLabel","display","yAxes","stacked","ticks","beginAtZero","React"],"mappings":"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","file":"static/js/11.3c6b106f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","export { default as NumberWidget } from './NumberWidget';\nexport { default as IconWidget } from './IconWidget';\n","import Loader from 'react-loader-spinner'\nimport Page from 'components/Page';\nimport {NumberWidget } from 'components/Widget';\nimport {Pie ,Doughnut} from 'react-chartjs-2';\nimport ConfigurationFile from '../TestData/Configuration.json';\nimport CommonTestData from '../TestData/CommonTestData.json';\nimport APICon from '../TestData/ServerAddress.json';\nimport React from 'react';\nimport { Bar, Line,Radar,Polar,Combo } from 'react-chartjs-2';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n} from 'reactstrap';\nimport {\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} \nfrom 'reactstrap';\nimport { getColor } from 'utils/colors';\nvar APIBasePath =APICon.APIURL;\nvar ReportPublishPath =APICon.ReportURL;\nfunction GetPieChart(summaryPass,summaryFail) {\n  return {\n    datasets: [\n      {\n        data: [summaryPass, summaryFail],\n        backgroundColor: [\n          getColor('success'),\n          getColor('danger'),\n        ],\n      },\n    ],\n    labels: ['PASS', 'FAIL'],\n  };\n}\nfunction addSpinner()\n{\n  return(\n    <Loader\n       type=\"Puff\"\n       color=\"#00BFFF\"\n       height={50}\n       width={10000}\n       timeout={1200000}\n\n    />\n   );\n}\nfunction GetListvalueFromJsonResponce(options) \n{\n  let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n\t));\n\treturn allitem;\n}\n\nfunction GetLineChart(Component=[],summaryPass={},summaryFail={}) {\n  return {\n    labels: Component,\n    datasets: [\n      {\n        label: 'PASS',\n        backgroundColor: getColor('success'),\n        borderColor: getColor('success'),\n        borderWidth: 1,\n        data: [\n          ...summaryPass,\n        ],\n      },\n      {\n        label: 'FAIL',\n        backgroundColor: getColor('danger'),\n        borderColor: getColor('danger'),\n        borderWidth: 1,\n        data: [\n          ...summaryFail,\n        ],\n      },\n    ],\n  };\n}\n\nfunction GetBarChart(Component=[],summaryPass={},summaryFail={}) {\n  return {\n    labels: Component,\n    datasets: [\n      {\n        label: 'PASS',\n        backgroundColor: getColor('success'),\n        borderColor: getColor('success'),\n        borderWidth: 1,\n        type: 'bar',\n        fill: true,\n        data: [\n          ...summaryPass,\n        ],\n        \n      },\n      {\n        label: 'FAIL',\n        backgroundColor: getColor('danger'),\n        borderColor: getColor('danger'),\n        borderWidth: 1,\n        type: 'bar',\n        fill: true,\n        data: [\n          ...summaryFail,\n        ],\n      },\n    ],\n  };\n}\nfunction genLineDataforModuleFail(Component=[],summaryPass={},summaryFail={}){\n  return {\n    labels: Component,\n    datasets: [\n      {\n        label: 'PASS',\n        backgroundColor: getColor('success'),\n        borderColor: getColor('success'),\n        borderWidth: 1,\n        data: summaryPass,\n        fill: false\n      },\n      {\n        label: 'FAIL',\n        backgroundColor: getColor('danger'),\n        borderColor: getColor('danger'),\n        borderWidth: 1,\n        data: summaryFail,\n        fill: false\n      },\n    ],\n  };\n};\n\nfunction Options({ options }) {\n    return (\n        options.map(option => \n                    <option >{option.Environment}</option>)\n                   );\n}\n\nfunction DateOptions({ options }) {\n  let allitem = []\n  for (let i = 0; i < ConfigurationFile.DashboardTotalDayCount; i++) \n  {\n    allitem.push(options[i+1]);\n    \n  }\n  return (\n          allitem.map((i,index) => \n          <option >{allitem[index]}</option>)\n        );\n  \n}\nfunction TimeOptions({ options }) {\n  return (\n          Object.keys(options).map((key)  => \n          <option >{key}</option>)\n        );\n  \n}\nfunction GetAllModule(testData){\n  let allitem = []\n  let finalItem =[]\n     Object.keys(testData).map((key) => (\n      allitem.push(key)\n    ));\n\n    for (let i = 0; i < allitem.length-2; i++) \n    {\n      finalItem.push(allitem[i])\n    }\n  return (\n    finalItem\n  );\n}\n\nfunction GetAllPass(testData){\n  let allitem = []\n  let finalItem =[]\n     Object.keys(testData).map((key) => (\n      allitem.push(testData[key].split('|')[0])\n    ));\n    for (let i = 0; i < allitem.length-2; i++) \n    {\n      finalItem.push(allitem[i])\n    }\n  return (\n    finalItem\n  );\n}\n\nfunction GetAllFail(testData){\n  let allitem = []\n  let finalItem =[]\n     Object.keys(testData).map((key) => (\n      allitem.push(testData[key].split('|')[1])\n    ));\n    for (let i = 0; i < allitem.length-2; i++) \n    {\n      finalItem.push(allitem[i])\n    }\n  return (\n    finalItem\n  );\n}\n\nclass DashboardPage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      items: [],\n      summary: [],\n      isLoaded: false,\n      dashboardTotalDays:[],\n      defaultEnv:ConfigurationFile.DefaultEnvironment,\n      ENV:ConfigurationFile.DefaultEnvironment,\n      EXECUTIONDATE:'Last '+ConfigurationFile.DashboardHistoryCount+' Execution Results',\n      executionDateList:[],\n      EXECUTIONHTMLTime:'',\n      allModule :[],\n      allModuleName:[],\n      PassModulewise:[],\n      allPassModuleWise:[],\n      FailModulewise:[],\n      allFailModuleWise:[],\n    }\n    fetch(APIBasePath+'as')\n    //fetch('https://jsonplaceholder.typicode.com/todos/1')\n    .then(res=>res.json())\n    .then(json=> {\n      this.setState({\n        items:json,\n      }\n      )\n    });\n    fetch(APIBasePath+'summary?env='+ConfigurationFile.DefaultEnvironment+'&edate=Last '+ConfigurationFile.DashboardHistoryCount+' Execution Results')\n    //fetch('https://jsonplaceholder.typicode.com/todos/1')\n    .then(res=>res.json())\n    .then(json=> {\n      this.setState({\n        summary:json,\n      }\n      )\n    });\n    fetch(APIBasePath+'summary?dashboardtotaldays='+ConfigurationFile.DashboardTotalDayCount)\n    //fetch('https://jsonplaceholder.typicode.com/todos/1')\n    .then(res=>res.json())\n    .then(json=> {\n      this.setState({\n        dashboardTotalDays:json,\n      }\n      )\n    });\n    fetch(APIBasePath+'testcase?moduleName=')\n\t\t.then(res=>res.json())\n\t\t.then(json=> {\n\t\t  this.setState({\n\t\t\tallModuleName:json,\n\t\t  }\n      )\n      var ModuleName = GetListvalueFromJsonResponce(this.state.allModuleName)\n      this.setState({allModule:ModuleName});\n    });\n    fetch(APIBasePath+'dashboard?env='+this.state.ENV+'&histortyCount='+ConfigurationFile.DashboardHistoryCount+'&id=0')\n\t\t.then(res=>res.json())\n\t\t.then(json=> {\n\t\t  this.setState({\n      PassModulewise:json,\n\t\t  }\n      )\n      var RunTimeCheck = GetListvalueFromJsonResponce(this.state.PassModulewise)\n      this.setState({allPassModuleWise:RunTimeCheck});\n    });\n    fetch(APIBasePath+'dashboard?env='+this.state.ENV+'&histortyCount='+ConfigurationFile.DashboardHistoryCount+'&id=1')\n\t\t.then(res=>res.json())\n\t\t.then(json=> {\n\t\t  this.setState({\n      FailModulewise:json,\n\t\t  }\n      )\n      var RunTimeCheck = GetListvalueFromJsonResponce(this.state.FailModulewise)\n      this.setState({allFailModuleWise:RunTimeCheck});\n\t\t});\n    this.setState({isLoaded:true})\n   // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n  }\n  \n  updateENV(event){\n    this.setState({isLoaded:false})\n    var PreviousEnv = this.state.ENV;\n    var onchangeenvvalue = event.target.value;\n    this.setState({ENV : onchangeenvvalue})\n    if(this.state.EXECUTIONDATE.includes('Execution Results'))\n    {\n      this.setState({executionDateList : ''})\n      fetch(APIBasePath+'summary?env='+onchangeenvvalue+'&edate=Last '+ConfigurationFile.DashboardHistoryCount+' Execution Results')\n      //fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(res=>res.json())\n      .then(json=> {\n        this.setState({\n          summary:json,\n        }\n        )\n      });\n    }\n    else{\n    fetch(APIBasePath+'summary?env='+onchangeenvvalue+'&executiondate='+this.state.EXECUTIONDATE)\n    .then(res=>res.json())\n    .then(json=> {\n      this.setState({\n        executionDateList:json,\n      }\n      )\n    });\n    if(PreviousEnv !==onchangeenvvalue)\n    {\n      fetch(APIBasePath+'dashboard?env='+onchangeenvvalue+'&histortyCount='+ConfigurationFile.DashboardHistoryCount+'&id=0')\n      .then(res=>res.json())\n      .then(json=> {\n        this.setState({\n        PassModulewise:json,\n        }\n        )\n        var RunTimeCheck = GetListvalueFromJsonResponce(this.state.PassModulewise)\n        this.setState({allPassModuleWise:RunTimeCheck});\n      });\n      fetch(APIBasePath+'dashboard?env='+onchangeenvvalue+'&histortyCount='+ConfigurationFile.DashboardHistoryCount+'&id=1')\n      .then(res=>res.json())\n      .then(json=> {\n        this.setState({\n        FailModulewise:json,\n        }\n        )\n        var RunTimeCheck = GetListvalueFromJsonResponce(this.state.FailModulewise)\n        this.setState({allFailModuleWise:RunTimeCheck});\n      });\n    }\n    this.setState({isLoaded:true})\n  }\n\n  }\n\n    OpenHTMLfileForLastResults()\n    {\n      var HtmlLastResultResultAPI = APIBasePath+'report?id=0'\n      //var HtmlLastResultResultAPI = 'http://localhost:49656/api/report?id=0'\n      const HTMLLastResult = async () => \n      {\n        const ORResponse = await fetch(HtmlLastResultResultAPI);\n        const ORJson = await ORResponse.json();\n        if(ORJson.success.toLowerCase()==='true')\n        {\n          var htmlfileName= ORJson.servermessage;\n          window.open(ReportPublishPath+'TestSuiteSummaryfile/'+htmlfileName);\n        }\n        \n      }\n      HTMLLastResult();\n      \n    }\n\n    OpenHTMLfilebasedonDateandTime()\n    {\n        var htmlenv = this.state.ENV;\n        if(htmlenv.trim()===\"\")\n        {\n          return;\n        }\n        var executionDate =this.state.EXECUTIONDATE;\n        if(executionDate.trim()==='Last '+ConfigurationFile.DashboardHistoryCount+' Execution Results')\n        {\n          return;;\n        }\n        if(executionDate.trim()===\"\")\n        {\n          return;\n        }\n        var executionTime =this.state.EXECUTIONHTMLTime;\n        if(executionTime.trim()===\"\")\n        {\n          return;\n        }\n        var Month =''\n        var Dateformat = executionDate.toString().split(' ');\n        switch(Dateformat[1])\n        {\n            case\"Jan\":\n            Month=\"01\";\n            break;\n            case\"Feb\":\n            Month=\"02\";\n            break;\n            case\"Mar\":\n            Month=\"03\";\n            break;\n            case\"Apr\":\n            Month=\"04\";\n            break;\n            case\"May\":\n            Month=\"05\";\n            break;\n            case\"Jun\":\n            Month=\"06\";\n            break;\n            case\"Jul\":\n            Month=\"07\";\n            break;\n            case\"Aug\":\n            Month=\"08\";\n            break;\n            case\"Sep\":\n            Month=\"09\";\n            break;\n            case\"Oct\":\n            Month=\"10\";\n            break;\n            case\"Nov\":\n            Month=\"11\";\n            break;\n            case\"Dec\":\n            Month=\"12\";\n            break;\n\n        }\n        var Monthformated=Month+'-'+Dateformat[0]+'-'+Dateformat[2];\n        var htmlfileName='TestSummary_'+htmlenv+'_'+Monthformated+'_'+executionTime+'.html'\n        window.open(ReportPublishPath+'TestSuiteSummaryfile/'+htmlenv+'/'+htmlfileName);\n    }\n    updateExecutionDate(event)\n    {\n      this.setState({isLoaded:false})\n      var executionDate = event.target.value;\n      this.setState({EXECUTIONDATE : event.target.value})\n      if(executionDate.includes('Execution Results'))\n      {\n        this.setState({executionDateList : ''})\n        fetch(APIBasePath+'summary?env='+this.state.ENV+'&edate=Last '+ConfigurationFile.DashboardHistoryCount+' Execution Results')\n        //fetch('https://jsonplaceholder.typicode.com/todos/1')\n        .then(res=>res.json())\n        .then(json=> {\n          this.setState({\n            summary:json,\n          }\n          )\n        });\n      }\n      else{\n      fetch(APIBasePath+'summary?env='+this.state.ENV+'&executiondate='+executionDate)\n      .then(res=>res.json())\n      .then(json=> {\n        this.setState({\n          executionDateList:json,\n        }\n        )\n      });\n      this.setState({isLoaded:true})\n      \n    }\n    }\n    graphPopulateBasedOnExecutionTime(event)\n    {\n      this.setState({isLoaded:false})\n      var executionTime = event.target.value;\n      this.setState({EXECUTIONHTMLTime:executionTime});\n      var API = APIBasePath+'summary?env='+this.state.ENV+'&edate='+this.state.EXECUTIONDATE+'&etime='+executionTime;\n      fetch(API)\n      //fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(res=>res.json())\n      .then(json=> {\n        this.setState({\n          summary:json,\n        }\n        )\n      });\n      this.setState({isLoaded:true})\n    }\n  render() {\n    \n    var {isLoaded,items,summary,defaultEnv,dashboardTotalDays,executionDateList} = this.state;\n    if(!isLoaded)\n    {\n      addSpinner();\n    }\n    var tpass=0;\n    try{\n     tpass=items.map((postdetails,index)=> {\n                return postdetails.totalpass\n               })\n              }catch(error)\n              {}\n      var tFail=0;\n      try{\n     tFail=items.map((postdetails,index)=> {\n    return postdetails.totalfail\n    })}\n    catch(error)\n    {}\n    var summaryPass = summary.SummaryPass;\n    var summaryFail = summary.SummaryFail;\n    var test1 = GetAllModule(summary);\n    var test2 =GetAllPass(summary);\n    var test3 =GetAllFail(summary);\n    return (\n      <Page\n        className=\"DashboardPage\"\n        title=\"Dashboard\"\n        breadcrumbs={[{ name: 'Dashboard', active: true }]}\n      >\n        <Row>\n\t\t       <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Test Sctipts\"\n              try\n              number={items.map((postdetails,index)=> {\n                return postdetails.totaltestscripts\n               })}\n              color=\"secondary\"\n            />\n            </Col>\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Components\"\n              number={items.map((postdetails,index)=> {\n                return postdetails.totalcomponents\n               })}\n              color=\"secondary\"\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Custom Function\"\n              number={items.map((postdetails,index)=> {\n                return postdetails.totalcustomfunction\n               })}\n              color=\"secondary\"\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            < NumberWidget onClick={this.OpenHTMLfileForLastResults.bind(this)}\n              title=\"Last Results\"\n              subtitle={\"PASS: \" + tpass+ \" FAIL: \"+tFail}\n                number=  {items.map((postdetails,index)=> {\n                return postdetails.lastresult\n               })}\n              color=\"secondary\"\n              />\n          </Col>\n        </Row>\n      <Row>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Selection Citieria</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={4}>\n                   Environment*\n                  </Label>\n                  <Col>\n                    <Input type=\"select\" name=\"env\" defaultValue = {defaultEnv} value={this.state.text} onChange={this.updateENV.bind(this)}>\n\t\t\t\t\t          <Options options={CommonTestData} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup row>\n                  <Label for=\"exampleSelect\" sm={4}>\n                    Execution Summary*\n                  </Label>\n                  <Col >\n                    <Input type=\"select\" name=\"executionsummary\" value={this.state.text} onChange={this.updateExecutionDate.bind(this)}>\n\t\t\t\t\t          <option>Last {ConfigurationFile.DashboardHistoryCount} Execution Results</option>\n                    <DateOptions options={dashboardTotalDays} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup row>\n                  <Label for=\"exampleSelect\" sm={4}>\n                    Execution Time\n                  </Label>\n                  <Col >\n                    <Input type=\"select\" name=\"executiontime\" defaultValue = \"\" value={this.state.text} onChange={this.graphPopulateBasedOnExecutionTime.bind(this)}>\n                    <option></option>\n                    <TimeOptions options={executionDateList} />\n                    </Input>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t <Col xl={6} >\n          <Card>\n            <CardHeader>Total Pass Fail Count</CardHeader>\n            <CardBody>\n\t\t\t  <Col onClick={this.OpenHTMLfilebasedonDateandTime.bind(this)}>\n              <Pie  data={GetPieChart(summaryPass,summaryFail)} />\n\t\t\t  </Col>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n        <Row>\n        <Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>\n                Execution Status \n              </CardHeader>\n            <CardBody>\n              <Line\n                data={GetLineChart(test1,test2,test3)}\n                options={{\n                  scales: {\n                    xAxes: [\n                      {\n                        scaleLabel: {\n                          display: true,\n                        },\n                      },\n                    ],\n                    yAxes: [\n                      {\n                        stacked: true,\n                        scaleLabel: {\n                          display: true,\n                        },\n                      },\n                    ],\n                  },\n                }}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Execution Summary Results</CardHeader>\n            <CardBody>\n              <Bar data={GetBarChart(test1,test2,test3)} \n              options={{\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }]\n                },\n              }}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Module Pass/Fail Graph</CardHeader>\n            <CardBody>\n            <Line data={genLineDataforModuleFail(this.state.allModule,this.state.allPassModuleWise,this.state.allFailModuleWise)} />\n            </CardBody>\n          </Card>\n        </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n"],"sourceRoot":""}