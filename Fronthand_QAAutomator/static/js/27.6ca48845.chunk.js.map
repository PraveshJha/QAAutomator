{"version":3,"sources":["components/Typography.js","pages/funcLibraries/GenericHelper.js","components/Page.js","../node_modules/reactstrap/es/FormFeedback.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","pages/Web/Configuration.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","Tag","tag","className","type","restProps","classes","classNames","defaultProps","common_deleteIteminJarrayBasedonIndex","Item","index","key","testData","filter","m","id","i","length","error","common_AddIteminJarrayBasedonIndex","keyList","allItem","Number","NewItemContent","push","common_checkblankvalueinJarray","trim","common_CheckValueFromJson","options","checkvalue","allitem","Object","keys","map","toLowerCase","common_GetListvalueFromJsonResponce","common_GetListKeyFromJsonResponce","common_ChangeJsoncontentforServer","ItemValue","valueaf","includes","split","join","checkJsonFormat","sampleJSON","JSON","parse","Exception","getListItem","Input","labelName","common_RemoveItesmfromListinJobject","ListItem","RemoveItem","count","outputData","keyName","bem","bn","create","Page","title","breadcrumbs","children","b","e","name","active","propTypes","PropTypes","node","tagPropType","string","cssModule","object","valid","bool","tooltip","undefined","FormFeedback","props","attributes","_objectWithoutPropertiesLoose","validMode","mapToCssModules","React","createElement","_extends","innerRef","oneOfType","func","CardBody","ref","CardHeader","APIBasePath","window","ENV","APIURL","Options","option","Environment","Configuration","Component","constructor","super","toggle","modalType","this","setState","modal","state","DefaultEnvironment","defaultBrowser","checkDashboardHistoryCount","feedbackDashboardHistoryCount","DashBoardHistoryCount","checkDashboardDays","feedbackDashboardDays","DashboardDays","HubMachineName","checkHubMachineName","feedbackHubMachineName","HubPortNumber","checkHubPort","feedbackHubPort","ConfigurationFile","CommonTestData","loader","RepotingHeaderName","ReportingHeaderColCode","ReportingSubHeaderColCode","feedbackReportingHeader","checkReportingHeader","checkHeaderColCode","feedbackHeaderColCode","checkSubHeaderColCode","feedbackSubHeaderColCode","checkSenderEmail","feedbackSenderEmailAddress","SenderEmailAddress","checkSenderPassword","feedbackSenderPassword","SenderPassword","checkReceiverEmail","ReceiverEmail","feedbackReceiverEmail","pageloadingStatus","Emulator","ScreenType","screenWidth","screenHight","checkScreenType","feedbackScreenType","checkWidth","feedbackWidth","checkHight","feedbackHight","allScreenName","defaultEmulator","defaltScreenName","allDefaultScreen","checkmanualdevURL","checkdevtoolUsername","checkdevtoolPassword","feedbackManualDevURL","feedbackUpdatedevUserName","feedbackUpdatedevPassword","manualdevURL","devtoolUserName","devtoolPassword","a","fetch","homepage","json","homepageResponse","success","DefaultBrowser","DashboardHistoryCount","DashboardTotalDayCount","HUBMachineName","HUBPort","ReportingHeaderName","HeaderColorCode","SubHeaderColorCode","SenderEmail","defaultEmulation","defaultemulation","defaultExecutionScreen","defaultscreenName","totalItem","genericHelper","GetLoaderData","UpdateEnv","event","target","value","UpdateBrowser","UpdateDefaultEmulation","UpdateEmulation","UpdatescreenWidth","test","UpdatescreenHight","UpdateManualDevtool","manualdevtool","UpdatesManualDevURL","UpdatedevUserName","UpdatedevPassword","selectdefaultScreen","selectScreenType","UpdateScreenType","afterFocusScreenType","emu","width","hight","UpdateDashBoardHistoryCount","UpdateHubMachineName","UpdateHubPort","UpdateDashBoardDays","UpdateReportingHeaderName","UpdateHeaderColorCode","UpdateSubHeaderColorCode","UpdateSenderEmailAddress","UpdateSenderPassword","UpdateRecieverEmailAddress","SaveConfig","env","Browser","HistoryCount","DashboardDaycount","executionEmulation","executionScreen","ExceptionMessage","isNaN","modalValidationText","CommonJObject","configjson","configAPI","requestOptions","method","headers","body","stringify","ORResponse","ORJson","servermessage","configurationRequest","SaveManualDevToolInfo","SaveScreenSetUp","emulation","screenName","Width","Hight","console","log","postData","requestAPI","responseItem","responseBody","requestforServer","SaveHUBconfig","hub","port","SaveReportSettingconfig","headerName","headerColCode","SubheaderColCode","SaveEmailSetUp","senderEmail","Password","RecEmailAddress","render","color","height","timeout","visible","lg","md","sm","xs","row","for","disabled","onChange","bind","invalid","data","onSelect","onClick","isOpen","caseSensitive","minLength","onBlur"],"mappings":"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","file":"static/js/27.6ca48845.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","export default\n{\n    common_deleteIteminJarrayBasedonIndex(Item,index,key) \n    {\n        try{\n            var testData = Item.filter(m => m.id !== index);\n            for(let i=index;i<=testData.length;i++)\n            {\n                testData[i-1][key]=i;\n            }\n            return testData;\n        }\n        catch(error)\n        {}\n        return Item;\n    },\n    common_AddIteminJarrayBasedonIndex(Item,index,keyList,key) \n    {\n        try{\n            var allItem=[]\n            for(let i=0;i<Number(index);i++)\n            {\n                allItem[i]= Item[i];\n            }\n            var NewItemContent ={};\n            for(let i=0;i<keyList.length;i++)\n            {\n                NewItemContent[keyList[i]]='';\n            }\n            NewItemContent[key]=Number(index)+1;\n            allItem.push(NewItemContent)\n            for(let i=Number(index);i<Item.length;i++)\n            {\n                Item[i]['id']=Number(i)+2;\n                allItem.push(Item[i]);\n            }\n            return allItem;\n        }\n        catch(error)\n        {}\n        return Item;\n    },\n\n    common_checkblankvalueinJarray(Item,key) \n    {\n        try{\n            for(let i=0;i<=Item.length;i++)\n            {\n                if(Item[i][key].trim()==='')\n                {\n                    return true\n                }\n            }\n            return false;\n        }\n        catch(error)\n        {}\n        return false;\n    },\n\n    common_CheckValueFromJson( options,checkvalue) \n    {\n     let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n    ));\n    for (let i = 0; i < allitem.length; i++) \n    {\n      if(allitem[i].trim().toLowerCase()===checkvalue.trim().toLowerCase())\n      {\n        return true;\n      }\n    }\n    return false;\n    },\n\n    common_GetListvalueFromJsonResponce(options) \n    {\n        let allitem = [];\n        try{\n            Object.keys(options).map((key) => (\n            allitem.push(options[key])\n            ));\n            }\n        catch(error)\n        {}\n        return allitem;\n    },\n    common_GetListKeyFromJsonResponce(options) \n    {\n        let allitem = []\n        Object.keys(options).map((key) => (\n        allitem.push(key)\n        ));\n        return allitem;\n    },\n\n    common_ChangeJsoncontentforServer(ItemValue)\n    {\n    try{\n        var valueaf =[];\n    if(ItemValue.includes(\"+\"))\n    {\n        valueaf = ItemValue.split('+')\n        ItemValue= valueaf.join('auplussignau')\n    }\n    if(ItemValue.includes(\":\"))\n    {\n        valueaf = ItemValue.split(':')\n        ItemValue= valueaf.join('aucolumnsignau')\n    }\n    if(ItemValue.includes(\"{\"))\n    {\n        valueaf = ItemValue.split('{')\n        ItemValue= valueaf.join('aucurlyopenbracketau')\n    }\n    if(ItemValue.includes(\"}\"))\n    {\n        valueaf = ItemValue.split('}')\n        ItemValue= valueaf.join('aucurlyclosebracketau')\n    }\n    if(ItemValue.includes(\"[\"))\n    {\n        valueaf = ItemValue.split('[')\n        ItemValue= valueaf.join('aubigopenbracketau')\n    }\n    if(ItemValue.includes(\"]\"))\n    {\n        valueaf = ItemValue.split(']')\n        ItemValue= valueaf.join('aubigclosebracketau')\n    }\n    if(ItemValue.includes('\"'))\n    {\n        valueaf = ItemValue.split('\"')\n        ItemValue= valueaf.join('audoublequotesau')\n    }\n    if(ItemValue.includes(\"=\"))\n    {\n        valueaf = ItemValue.split('=')\n        ItemValue= valueaf.join('auequalsignau')\n    }\n    }\n    catch(error)\n    {}\n    return ItemValue;\n    },\n\n    checkJsonFormat(sampleJSON)\n    {\n        if(sampleJSON.trim()==='')\n        {\n          return true;\n        }\n        try{\n         JSON.parse(sampleJSON);\n         return true;\n        }\n        catch(Exception)\n        {}\n        return false;\n    },\n    getListItem(Input,labelName)\n    {\n      let allitem = [];\n      try{\n      for(let i =0;i<Object.keys(Input).length;i++)\n      {\n          allitem.push(Input[i][labelName])\n      }\n      }\n      catch(error)\n      {}\n      return allitem;\n    },\n\n     common_RemoveItesmfromListinJobject(ListItem,RemoveItem) \n    {\n  let count = Object.keys(ListItem).length;\n  let outputData={};\n  for(let i=1;i<=count;i++)\n  {\n\tvar keyName =Object.keys(ListItem)[i-1];\n\tif(keyName.trim().toLowerCase()!==RemoveItem.trim().toLowerCase())\n\t{\n\t\toutputData[keyName]=ListItem[keyName];\n\t}\n\t\n  }\n  return outputData;\n}\n\n}\n\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  valid: PropTypes.bool,\n  tooltip: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  valid: undefined\n};\n\nvar FormFeedback = function FormFeedback(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      valid = props.valid,\n      tooltip = props.tooltip,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"valid\", \"tooltip\", \"tag\"]);\n\n  var validMode = tooltip ? 'tooltip' : 'feedback';\n  var classes = mapToCssModules(classNames(className, valid ? \"valid-\" + validMode : \"invalid-\" + validMode), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormFeedback.propTypes = propTypes;\nFormFeedback.defaultProps = defaultProps;\nexport default FormFeedback;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import Page from 'components/Page';\nimport React from 'react';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { Combobox } from 'react-widgets'\nimport genericHelper from '../funcLibraries/GenericHelper.js';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  FormFeedback,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nvar APIBasePath= window.ENV.APIURL;\n\nfunction Options({ options }) {\n    return (\n        options.map(option => \n                    <option key={option.Environment}>                                   \n                    {option.Environment}\n                    </option>)\n                   );\n}\n\nclass Configuration extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state=\n    {\n       DefaultEnvironment : '',\n       defaultBrowser : '',\n       checkDashboardHistoryCount:false,\n       feedbackDashboardHistoryCount:'',\n       DashBoardHistoryCount:'',\n       checkDashboardDays:false,\n       feedbackDashboardDays:'',\n       DashboardDays:'',\n       HubMachineName:'',\n       checkHubMachineName:false,\n       feedbackHubMachineName:'',\n       HubPortNumber:'',\n       checkHubPort:false,\n       feedbackHubPort:'',\n       ConfigurationFile:[],\n       CommonTestData:[],\n       loader:true,\n       RepotingHeaderName:'',\n       ReportingHeaderColCode:'',\n       ReportingSubHeaderColCode:'',\n       feedbackReportingHeader:'',\n       checkReportingHeader:false,\n       checkHeaderColCode :false,\n       feedbackHeaderColCode:'',\n       checkSubHeaderColCode:false,\n       feedbackSubHeaderColCode:'',\n       checkSenderEmail:false,\n       feedbackSenderEmailAddress:'',\n       SenderEmailAddress:'',\n       checkSenderPassword:false,\n       feedbackSenderPassword:'',\n       SenderPassword:'',\n       checkReceiverEmail:false,\n       ReceiverEmail:'',\n       feedbackReceiverEmail:'',\n       pageloadingStatus :false,\n       Emulator:'',\n       ScreenType:'',\n       screenWidth:'',\n       screenHight: '',\n       checkScreenType:false,\n       feedbackScreenType:'',\n       checkWidth:false,\n       feedbackWidth:false,\n       checkHight:false,\n       feedbackHight:false,\n       allScreenName:[],\n       defaultEmulator:'',\n       defaltScreenName:'',\n       allDefaultScreen:[],\n       checkmanualdevURL:false,\n       checkdevtoolUsername:false,\n       checkdevtoolPassword : false,\n       feedbackManualDevURL:'',\n       feedbackUpdatedevUserName:'',\n       feedbackUpdatedevPassword:'',\n       manualdevURL:'',\n       devtoolUserName:'',\n       devtoolPassword:'',\n\n    }\n    const GetLoaderData = async () => \n    {\n      this.setState({pageloadingStatus:true});\n      const homepage = await fetch(APIBasePath+'dashboard');\n      const homepageResponse = await homepage.json();\n      this.setState({pageloadingStatus:false});\n      if(homepageResponse.success)\n      {\n          this.setState({ConfigurationFile:homepageResponse.Configuration});\n          this.setState({CommonTestData:homepageResponse.CommonTestData});\n          this.setState({DefaultEnvironment : this.state.ConfigurationFile.DefaultEnvironment});\n          this.setState({defaultBrowser : this.state.ConfigurationFile.DefaultBrowser});\n          this.setState({DashBoardHistoryCount:this.state.ConfigurationFile.DashboardHistoryCount});\n          this.setState({DashboardDays:this.state.ConfigurationFile.DashboardTotalDayCount});\n          this.setState({HubMachineName:this.state.ConfigurationFile.HUBMachineName});\n          this.setState({HubPortNumber:this.state.ConfigurationFile.HUBPort});\n          this.setState({RepotingHeaderName:this.state.ConfigurationFile.ReportingHeaderName});\n          this.setState({ReportingHeaderColCode:this.state.ConfigurationFile.HeaderColorCode});\n          this.setState({ReportingSubHeaderColCode:this.state.ConfigurationFile.SubHeaderColorCode});\n          this.setState({SenderEmailAddress:this.state.ConfigurationFile.SenderEmail});\n          this.setState({SenderPassword:this.state.ConfigurationFile.SenderPassword});\n          this.setState({ReceiverEmail:this.state.ConfigurationFile.ReceiverEmail});\n          var defaultEmulation= this.state.ConfigurationFile.defaultemulation;\n          var defaultExecutionScreen= this.state.ConfigurationFile.defaultscreenName;\n          this.setState({Emulator:defaultEmulation});\n          this.setState({defaultEmulator:defaultEmulation});\n          this.setState({defaltScreenName:defaultExecutionScreen});\n          //@ get all List\n          var allItem = this.state.ConfigurationFile['Emulation'][defaultEmulation];\n          var totalItem = genericHelper.common_GetListKeyFromJsonResponce(allItem);\n          this.setState({allScreenName:totalItem});\n          this.setState({allDefaultScreen:totalItem});\n          this.setState({loader:false});\n      }\n    }\n    GetLoaderData();\n    \n  }\n  UpdateEnv(event)\n  {\n    \n    this.setState({DefaultEnvironment: event.target.value})\n    \n  }\n  UpdateBrowser(event)\n  {\n    this.setState({defaultBrowser: event.target.value})\n  }\n  \n  UpdateDefaultEmulation(event)\n  {\n    var Item = event.target.value;\n    if(Item !== this.state.defaultEmulator)\n    {\n      this.setState({defaltScreenName:''});\n      this.setState({defaultEmulator: Item});\n      var allItem = this.state.ConfigurationFile['Emulation'][Item];\n      var totalItem = genericHelper.common_GetListKeyFromJsonResponce(allItem);\n      this.setState({allDefaultScreen:totalItem});\n    }\n  }\n  UpdateEmulation(event)\n  {\n    var Item = event.target.value;\n    if(Item !== this.state.Emulator)\n    {\n      this.setState({Emulator: Item})\n      this.setState({allScreenName:[]});\n      this.setState({ScreenType:''});\n      this.setState({screenWidth:''});\n      this.setState({screenHight:''});\n      var allItem = this.state.ConfigurationFile['Emulation'][Item];\n      var totalItem = genericHelper.common_GetListKeyFromJsonResponce(allItem);\n      this.setState({allScreenName:totalItem});\n    }\n  }\n  UpdatescreenWidth(event)\n  {\n    var Item = event.target.value;\n    if(Item !== this.state.screenWidth)\n    {\n      this.setState({screenWidth: Item})\n    }\n    var format = /[^0-9]/ig;\n    if(format.test(Item))\n    {\n        this.setState({checkWidth:true});\n        return this.setState({feedbackWidth:'Width* can have number only'});\n    }\n    else\n    {\n      this.setState({checkWidth:false});\n    }\n  }\n  UpdatescreenHight(event)\n  {\n    var Item = event.target.value.trim();\n    if(Item !== this.state.screenHight)\n    {\n      this.setState({screenHight: Item})\n    }\n    var format = /[^0-9]/ig;\n    if(format.test(Item))\n    {\n        this.setState({checkHight:true});\n        return this.setState({feedbackHight:'Hight* can have number only'});\n    }\n    else\n    {\n      this.setState({checkHight:false});\n    }\n  }\n  UpdateManualDevtool(event)\n  {\n    var Item = event.target.value.trim();\n    if(Item !== this.state.manualdevtool)\n    {\n      this.setState({manualdevtool: Item})\n    }\n  }\n  UpdatesManualDevURL(event)\n  {\n    this.setState({checkmanualdevURL:false})\n    var Item = event.target.value.trim();\n    if(Item !== this.state.manualdevURL)\n    {\n      this.setState({manualdevURL: Item})\n    }\n  }\n  UpdatedevUserName(event)\n  {\n    this.setState({checkdevtoolUsername:false})\n    var Item = event.target.value.trim();\n    if(Item !== this.state.devtoolUserName)\n    {\n      this.setState({devtoolUserName: Item})\n    }\n  }\n  UpdatedevPassword(event)\n  {\n    this.setState({checkdevtoolPassword:false})\n    var Item = event.target.value.trim();\n    if(Item !== this.state.devtoolPassword)\n    {\n      this.setState({devtoolPassword: Item})\n    }\n  }\n  selectdefaultScreen(event)\n  {\n    var Item = event;\n    if(Item !== this.state.defaltScreenName)\n    {\n      this.setState({defaltScreenName: Item})\n    }\n  }\n  selectScreenType(event)\n  {\n    var Item = event;\n    if(Item !== this.state.ScreenType)\n    {\n      this.setState({ScreenType: Item})\n    }\n  }\n  UpdateScreenType(event)\n  {\n    var Item = event;\n    if(Item !== this.state.ScreenType)\n    {\n      this.setState({ScreenType: Item})\n    }\n    var format = /[^A-Za-z0-9- ]/ig;\n    if(format.test(Item))\n    {\n        this.setState({checkScreenType:true});\n        return this.setState({feedbackScreenType:'Screen Name* should not have special characters.'});\n    }\n    else\n    {\n      this.setState({checkScreenType:false});\n    }\n  }\n  afterFocusScreenType()\n  {\n    try{\n    var emu = this.state.Emulator;\n    var Item = this.state.ScreenType;\n    var width = this.state.ConfigurationFile['Emulation'][emu][Item]['WIDTH'];\n    var hight = this.state.ConfigurationFile['Emulation'][emu][Item]['HIGHT'];\n    this.setState({screenWidth:width});\n    this.setState({screenHight:hight});\n    }\n    catch(error)\n    {\n      this.setState({screenWidth:''});\n      this.setState({screenHight:''});\n    }\n  }\n\n  UpdateDashBoardHistoryCount(event)\n  {\n    \n    this.setState({checkDashboardHistoryCount: false})\n    this.setState({DashBoardHistoryCount: event.target.value})\n    \n  }\n\n  UpdateHubMachineName(event)\n  {\n    \n    this.setState({checkHubMachineName: false})\n    this.setState({HubMachineName: event.target.value})\n    \n  }\n  \n  UpdateHubPort(event)\n  {\n    \n    this.setState({checkHubPort: false})\n    this.setState({HubPortNumber: event.target.value})\n    \n  }\n  UpdateDashBoardDays(event)\n  {\n    \n    this.setState({checkDashboardDays: false})\n    this.setState({DashboardDays: event.target.value})\n    \n  }\n  UpdateReportingHeaderName(event)\n  {\n    \n    this.setState({checkReportingHeader: false})\n    this.setState({feedbackReportingHeader: ''})\n    this.setState({RepotingHeaderName: event.target.value})\n  }\n\n  UpdateHeaderColorCode(event)\n  {\n    \n    this.setState({checkHeaderColCode: false})\n    this.setState({feedbackHeaderColCode: ''})\n    this.setState({ReportingHeaderColCode: event.target.value})\n  }\n  UpdateSubHeaderColorCode(event)\n  {\n    \n    this.setState({checkSubHeaderColCode: false})\n    this.setState({feedbackSubHeaderColCode: ''})\n    this.setState({ReportingSubHeaderColCode: event.target.value})\n  }\n\n  UpdateSenderEmailAddress(event)\n  {\n    \n    this.setState({checkSenderEmail: false})\n    this.setState({feedbackSenderEmailAddress: ''})\n    this.setState({SenderEmailAddress: event.target.value})\n  }\n  UpdateSenderPassword(event)\n  {\n    \n    this.setState({checkSenderPassword: false})\n    this.setState({feedbackSenderPassword: ''})\n    this.setState({SenderPassword: event.target.value})\n  }\n  UpdateRecieverEmailAddress(event)\n  {\n    \n    this.setState({checkReceiverEmail: false})\n    this.setState({feedbackReceiverEmail: ''})\n    this.setState({ReceiverEmail: event.target.value})\n  }\n  SaveConfig()\n  {\n     var env = this.state.DefaultEnvironment;\n     var Browser = this.state.defaultBrowser;\n     var HistoryCount = this.state.DashBoardHistoryCount;\n     var DashboardDaycount = this.state.DashboardDays;\n     var executionEmulation = this.state.defaultEmulator;\n     var executionScreen= this.state.defaltScreenName;\n     var ExceptionMessage ='';\n     if(isNaN(HistoryCount) || HistoryCount.trim()===\"\")\n     {\n      this.setState({checkDashboardHistoryCount:true})\n      this.setState({feedbackDashboardHistoryCount:'Dashboard History Count* takes only numeric value.'})\n      ExceptionMessage= ExceptionMessage+ 'Dashboard History Count* takes only numeric value..'\n     }\n     if(isNaN(DashboardDaycount) || DashboardDaycount.trim()==='')\n     {\n      this.setState({checkDashboardDays:true})\n      this.setState({feedbackDashboardDays:'Dashboard Total Day Count* takes only numeric value.'})\n      ExceptionMessage= ExceptionMessage+ 'Dashboard Total Day Count* takes only numeric value..'\n     }\n     if(executionScreen ==='')\n     {\n       this.setState({modal:true});\n       this.setState({modalValidationText:'Default Execution Machine name can not blank.'});\n       return;\n     }\n     if(ExceptionMessage.trim() !==\"\")\n     {\n      // this.setState({modal:true})\n       return ;\n     }\n     this.setState({loader:true})\n     var CommonJObject ={};\n     CommonJObject[\"DefaultEnvironment\"]=env;\n     CommonJObject[\"DefaultBrowser\"]=Browser;\n     CommonJObject[\"DashboardHistoryCount\"]=HistoryCount;\n     CommonJObject[\"DashboardTotalDayCount\"]=DashboardDaycount;\n     CommonJObject[\"defaultemulation\"]=executionEmulation;\n     CommonJObject[\"defaultscreenName\"]=executionScreen;\n     var configjson = genericHelper.common_ChangeJsoncontentforServer(CommonJObject)\n     var configAPI =APIBasePath+'configuration';\n     var requestOptions = {\n       method: 'POST',\n       headers: {\"Accept\": \"*/*\",'Content-type': 'application/json'},\n      body: JSON.stringify(configjson)\n     };\n     const configurationRequest = async () => \n     {\n       this.setState({pageloadingStatus:true});\n       const ORResponse = await fetch(configAPI,requestOptions);\n       const ORJson = await ORResponse.json();\n       this.setState({loader:false})\n       this.setState({pageloadingStatus:false});\n       this.setState({modal:true})\n       this.setState({modalValidationText:ORJson.servermessage})\n     }\n     configurationRequest();\n\n  }\n\n  SaveManualDevToolInfo()\n  {\n\n  }\n\n  SaveScreenSetUp()\n  {\n     var emulation = this.state.Emulator;\n     var screenName = this.state.ScreenType;\n     var Width = this.state.screenWidth;\n     var Hight = this.state.screenHight;\n     console.log(Width)\n     console.log(Hight)\n     var ExceptionMessage ='';\n     if(screenName.trim() === '')\n     {\n      this.setState({checkScreenType:true})\n      this.setState({feedbackScreenType:'Screen name* can not be blank.'})\n      ExceptionMessage= ExceptionMessage+ 'Screen name* can not be blank.'\n      this.setState({modal:true})\n      this.setState({modalValidationText:ExceptionMessage})\n      return;\n      \n     }\n     if(Width ==='')\n     {\n      this.setState({checkWidth:true})\n      this.setState({feedbackWidth:'Screen width can not be blank.'})\n      ExceptionMessage= ExceptionMessage+ 'Screen width can not be blank.';\n     }\n     if(Hight ==='')\n     {\n      this.setState({checkHight:true})\n      this.setState({feedbackHight:'Screen hight can not be blank.'})\n      ExceptionMessage= ExceptionMessage+ 'Screen hight can not be blank.';\n     }\n     if(ExceptionMessage.trim() !==\"\")\n     {\n       return ;\n     }\n     if(this.state.checkScreenType)\n     {\n      this.setState({modal:true})\n      this.setState({modalValidationText:ExceptionMessage})\n      return ;\n     }\n     if(this.state.checkWidth)\n     {\n       return ;\n     }\n     if(this.state.checkHight)\n     {\n       return ;\n     }\n     //@ Post Request\n     var postData ={};\n     postData[\"Emulation\"]=emulation;\n     postData[\"ScreenName\"]=screenName;\n     postData[\"ScreenWidth\"]=Width;\n     postData[\"ScreenHight\"]=Hight;\n     var configjson = genericHelper.common_ChangeJsoncontentforServer(postData);\n     var requestAPI =APIBasePath+'configuration/4';\n     var requestOptions = {\n       method: 'POST',\n       headers: {\"Accept\": \"*/*\",'Content-type': 'application/json'},\n       body: JSON.stringify(configjson)\n     };\n     const requestforServer = async () => \n     {\n       this.setState({loader:true})\n       this.setState({pageloadingStatus:true});\n       const responseItem = await fetch(requestAPI,requestOptions);\n       const responseBody = await responseItem.json();\n       this.setState({loader:false})\n       this.setState({pageloadingStatus:false});\n       this.setState({modal:true})\n       this.setState({modalValidationText:responseBody.servermessage})\n     }\n     requestforServer();\n\n  }\n\n  SaveHUBconfig()\n  {\n    var ExceptionMessage='';\n    var hub = this.state.HubMachineName;\n    var port = this.state.HubPortNumber;\n    if(hub.trim()===\"\")\n    {\n     this.setState({checkHubMachineName:true})\n     this.setState({feedbackHubMachineName:'Hub Machine Name* can not be blank'})\n     ExceptionMessage= ExceptionMessage+ 'Hub Machine Name* can not be blank'\n    }\n    if(isNaN(port))\n    {\n     this.setState({checkHubPort:true})\n     this.setState({feedbackHubPort:'Port Number* takes only numeric value.'})\n     ExceptionMessage= ExceptionMessage+ 'Port Number* takes only numeric value..'\n    }\n    if(port.trim()===\"\")\n    {\n     this.setState({checkHubPort:true})\n     this.setState({feedbackHubPort:'Port Number* can not be blank'})\n     ExceptionMessage= ExceptionMessage+ 'Port Number* can not be blank'\n    }\n    if(ExceptionMessage.trim() !==\"\")\n    {\n      return ;\n    }\n    this.setState({loader:true})\n    var CommonJObject ={};\n    CommonJObject[\"HUBMachineName\"]=hub;\n    CommonJObject[\"HUBPort\"]=port;\n    var configjson = genericHelper.common_ChangeJsoncontentforServer(CommonJObject);\n    var configAPI =APIBasePath+'configuration/1';\n    var requestOptions = {\n      method: 'POST',\n      headers: {\"Accept\": \"*/*\",'Content-type': 'application/json'},\n      body: JSON.stringify(configjson)\n    };\n    const configurationRequest = async () => \n    {\n      this.setState({pageloadingStatus:true});\n      const ORResponse = await fetch(configAPI,requestOptions);\n      const ORJson = await ORResponse.json();\n      this.setState({pageloadingStatus:false});\n      this.setState({loader:false})\n      this.setState({modal:true})\n      this.setState({modalValidationText:ORJson.servermessage})\n      \n      \n    }\n    configurationRequest();\n  }\n\n  SaveReportSettingconfig()\n  {\n    var ExceptionMessage='';\n    var headerName = this.state.RepotingHeaderName;\n    var headerColCode = this.state.ReportingHeaderColCode;\n    var SubheaderColCode = this.state.ReportingSubHeaderColCode;\n    if(headerName.trim()===\"\")\n    {\n     this.setState({checkReportingHeader:true})\n     this.setState({feedbackReportingHeader:'Reporting Header Name* can not be blank'})\n     ExceptionMessage= 'Reporting Header Name* can not be blank';\n    }\n    if(headerColCode.trim()===\"\")\n    {\n     this.setState({checkHeaderColCode:true})\n     this.setState({feedbackHeaderColCode:'Header Color Code* can not be blank'})\n     ExceptionMessage= ExceptionMessage+ 'Header Color Code* can not be blank';\n    }\n    if(SubheaderColCode.trim()===\"\")\n    {\n     this.setState({checkSubHeaderColCode:true})\n     this.setState({feedbackSubHeaderColCode:'SubHeader Color Code* can not be blank'})\n     ExceptionMessage= ExceptionMessage+ 'SubHeader Color Code* can not be blank';\n    }\n    if(ExceptionMessage.trim() !==\"\")\n    {\n      return ;\n    }\n    this.setState({loader:true})\n    var CommonJObject ={};\n    CommonJObject[\"ReportingHeaderName\"]=headerName;\n    CommonJObject[\"HeaderColorCode\"]=headerColCode;\n    CommonJObject[\"SubHeaderColorCode\"]=SubheaderColCode;\n    var configjson = genericHelper.common_ChangeJsoncontentforServer(CommonJObject);\n    var configAPI =APIBasePath+'configuration/2';\n    var requestOptions = {\n      method: 'POST',\n      headers: {\"Accept\": \"*/*\",'Content-type': 'application/json'},\n      body: JSON.stringify(configjson)\n    };\n    const configurationRequest = async () => \n    {\n      this.setState({pageloadingStatus:true});\n      const ORResponse = await fetch(configAPI,requestOptions);\n      const ORJson = await ORResponse.json();\n      this.setState({loader:false})\n      this.setState({pageloadingStatus:false});\n      this.setState({modal:true})\n      this.setState({modalValidationText:ORJson.servermessage})\n\n    }\n    configurationRequest();\n  }\n\n  SaveEmailSetUp()\n  {\n    var ExceptionMessage='';\n    var senderEmail = this.state.SenderEmailAddress;\n    var Password = this.state.SenderPassword;\n    var RecEmailAddress = this.state.ReceiverEmail;\n    if(senderEmail.trim()===\"\")\n    {\n     this.setState({checkSenderEmail:true})\n     this.setState({feedbackSenderEmailAddress:'Sender Email Address* can not be blank'})\n     ExceptionMessage= 'Sender Email Address* can not be blank';\n    }\n    if(Password.trim()===\"\")\n    {\n     this.setState({checkSenderPassword:true})\n     this.setState({feedbackSenderPassword:'Password* can not be blank'})\n     ExceptionMessage= ExceptionMessage+ 'Password* can not be blank';\n    }\n    if(RecEmailAddress.trim()===\"\")\n    {\n     this.setState({checkReceiverEmail:true})\n     this.setState({feedbackReceiverEmail:'Receiver Email Address* can not be blank'})\n     ExceptionMessage= ExceptionMessage+ 'Receiver Email Address* can not be blank';\n    }\n    if(ExceptionMessage.trim() !==\"\")\n    {\n      return ;\n    }\n    this.setState({loader:true})\n    var CommonJObject ={};\n    CommonJObject[\"SenderEmail\"]=senderEmail;\n    CommonJObject[\"SenderPassword\"]=Password;\n    CommonJObject[\"ReceiverEmail\"]=RecEmailAddress;\n    var configjson = genericHelper.common_ChangeJsoncontentforServer(CommonJObject)\n    var configAPI =APIBasePath+'configuration/3';\n    var requestOptions = {\n      method: 'POST',\n      headers: {\"Accept\": \"*/*\",'Content-type': 'application/json'},\n      body: JSON.stringify(configjson)\n    };\n    const configurationRequest = async () => \n    {\n      this.setState({pageloadingStatus:true});\n      const ORResponse = await fetch(configAPI,requestOptions);\n      const ORJson = await ORResponse.json();\n      this.setState({loader:false})\n      this.setState({pageloadingStatus:false});\n      this.setState({modal:true})\n      this.setState({modalValidationText:ORJson.servermessage})\n\n    }\n    configurationRequest();\n  }\n\n  toggle = modalType => () => {\n    if (!modalType) {\n      return this.setState({\n        modal: !this.state.modal,\n      });\n    }\n\n    this.setState({\n      [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n    });\n  };\n\n  render() {\n\n  return (\n    <Page title=\"Configuration Setup\" breadcrumbs={[{ name: 'Configuration', active: true }]}>\n      <Loader \n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={50}\n        width={100}\n        timeout={120000} //3 secs\n        visible = {this.state.loader}\n      />\n\t <Row>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Execution Setup</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Default Environment*\n                  </Label>\n                  <Col>\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"envlist\" value ={this.state.DefaultEnvironment} onChange={this.UpdateEnv.bind(this)}>\n\t\t\t\t\t             <Options options={this.state.CommonTestData} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t        <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Default Browser*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"defaultbrowser\" value ={this.state.defaultBrowser} onChange={this.UpdateBrowser.bind(this)}>\n\t\t\t\t\t          <option>CHROME</option>\n                    <option>FIREFOX</option>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Dashboard History Count*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkDashboardHistoryCount} type=\"input\" name=\"DashboardHistory\"  value ={this.state.DashBoardHistoryCount} onChange={this.UpdateDashBoardHistoryCount.bind(this)}/>\n                    <FormFeedback>\n                      {this.state.feedbackDashboardHistoryCount}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Dashboard Total Day Count*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkDashboardDays} type=\"input\" name=\"DashboardDay\"  value ={this.state.DashboardDays} onChange={this.UpdateDashBoardDays.bind(this)}/>\n                    <FormFeedback>\n                      {this.state.feedbackDashboardDays}\n                   </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                   Default Emulation*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"defaultapplicationType\" value ={this.state.defaultEmulator} onChange={this.UpdateDefaultEmulation.bind(this)}>\n\t\t\t\t\t          <option>Web</option>\n                    <option>Mobile</option>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                  Default Execution Screen*\n                  </Label>\n                  <Col >\n                    <Combobox disabled={this.state.pageloadingStatus} name =\"defaultScreenType\" \n                      value={this.state.defaltScreenName}\n                      data={this.state.allDefaultScreen}\n                      onSelect={this.selectdefaultScreen.bind(this)}\n                      />\n                    <FormFeedback>\n                      {this.state.feedbackScreenType}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <Col >\n                  <Button disabled={this.state.pageloadingStatus} onClick={this.SaveConfig.bind(this)} color=\"primary\" name =\"SaveConfiguration\">Save</Button>\n                  </Col>\n                  <Modal\n                isOpen={this.state.modal}\n                toggle={this.toggle()}\n                className={this.props.className}>\n                <ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n                <ModalBody >\n                  {this.state.modalValidationText}\n                </ModalBody>\n                <ModalFooter>\n                  <Button disabled={this.state.pageloadingStatus} color=\"secondary\" onClick={this.toggle()}>\n                    OK\n                  </Button>\n                </ModalFooter>\n              </Modal>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Selenium Grid Setup</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Hub Machine IP*\n                  </Label>\n                  <Col>\n                  <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkHubMachineName} type=\"input\" name=\"DashboardHistory\"  value ={this.state.HubMachineName} onChange={this.UpdateHubMachineName.bind(this)}/>\n                    <FormFeedback>\n                      {this.state.feedbackHubMachineName}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n\t\t\t\t        <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Port Number*\n                  </Label>\n                  <Col >\n                     <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkHubPort} type=\"input\" name=\"DashboardHistory\"  value ={this.state.HubPortNumber} onChange={this.UpdateHubPort.bind(this)}/>\n                      <FormFeedback>\n                      {this.state.feedbackHubPort}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <Col >\n                  <Button disabled={this.state.pageloadingStatus} onClick={this.SaveHUBconfig.bind(this)} color=\"primary\" name =\"SaveConfiguration\">Save</Button>\n                 </Col>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Reporting Setup</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Reporting Header Name*\n                  </Label>\n                  <Col>\n                  <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkReportingHeader} type=\"input\" name=\"ReportingHeaderName\"  value ={this.state.RepotingHeaderName} onChange={this.UpdateReportingHeaderName.bind(this)}/>\n                    <FormFeedback>\n                      {this.state.feedbackReportingHeader}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n\t\t\t\t        <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Header Color Code*\n                  </Label>\n                  <Col >\n                     <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkHeaderColCode} type=\"input\" name=\"ReportingHeaderColCode\"  value ={this.state.ReportingHeaderColCode} onChange={this.UpdateHeaderColorCode.bind(this)}/>\n                      <FormFeedback>\n                      {this.state.feedbackHeaderColCode}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    SubHeader Color Code*\n                  </Label>\n                  <Col >\n                     <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkSubHeaderColCode} type=\"input\" name=\"ReportingSubHeaderColCode\"  value ={this.state.ReportingSubHeaderColCode} onChange={this.UpdateSubHeaderColorCode.bind(this)}/>\n                      <FormFeedback>\n                      {this.state.feedbackSubHeaderColCode}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <Col >\n                  <Button disabled={this.state.pageloadingStatus} onClick={this.SaveReportSettingconfig.bind(this)} color=\"primary\" name =\"SaveReportingSetting\">Save</Button>\n                 </Col>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Email Configuration</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Sender Email Address*\n                  </Label>\n                  <Col>\n                  <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkSenderEmail} type=\"input\" name=\"senderEmailAddress\"  value ={this.state.SenderEmailAddress} onChange={this.UpdateSenderEmailAddress.bind(this)}/>\n                    <FormFeedback>\n                      {this.state.feedbackSenderEmailAddress}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n\t\t\t\t        <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Password*\n                  </Label>\n                  <Col >\n                     <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkSenderPassword} type=\"password\" name=\"SenderPassword\"  value ={this.state.SenderPassword} onChange={this.UpdateSenderPassword.bind(this)}/>\n                      <FormFeedback>\n                      {this.state.feedbackSenderPassword}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                  Receiver Email Address*\n                  </Label>\n                  <Col >\n                     <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkReceiverEmail} type=\"input\" name=\"ReceiverEmail\"  value ={this.state.ReceiverEmail} onChange={this.UpdateRecieverEmailAddress.bind(this)}/>\n                      <FormFeedback>\n                      {this.state.feedbackReceiverEmail}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <Col >\n                  <Button disabled={this.state.pageloadingStatus} onClick={this.SaveEmailSetUp.bind(this)} color=\"primary\" name =\"SaveEmailSetUp\">Save</Button>\n                 </Col>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Responsive testing Set Up</CardHeader>\n            <CardBody>\n              <Form>\n\t\t\t\t        <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                   Emulation*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"defaultapplicationType\" value ={this.state.Emulator} onChange={this.UpdateEmulation.bind(this)}>\n\t\t\t\t\t          <option>Web</option>\n                    <option>Mobile</option>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                  Screen Name*\n                  </Label>\n                  <Col >\n                    <Combobox disabled={this.state.pageloadingStatus} invalid={this.state.checkScreenType} name =\"defaultScreenType\" \n                      value={this.state.ScreenType}\n                      data={this.state.allScreenName}\n                      caseSensitive={false}\n                      minLength={3}\n                      filter='contains'\n                      onSelect={this.selectScreenType.bind(this)}\n                      onChange={this.UpdateScreenType.bind(this)}\n                      onBlur={this.afterFocusScreenType.bind(this)}\n                      />\n                    <FormFeedback>\n                      {this.state.feedbackScreenType}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                  Width*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkWidth} type=\"input\" name=\"screenWidth\" value ={this.state.screenWidth} onChange={this.UpdatescreenWidth.bind(this)}>\n\t\t\t\t\t          </Input>\n                    <FormFeedback>\n                      {this.state.feedbackWidth}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                  Hight*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkHight} type=\"input\" name=\"defaultapplicationType\" value ={this.state.screenHight} onChange={this.UpdatescreenHight.bind(this)}>\n\t\t\t\t\t          </Input>\n                    <FormFeedback>\n                      {this.state.feedbackHight}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <Col >\n                  <Button disabled={this.state.pageloadingStatus} onClick={this.SaveScreenSetUp.bind(this)} color=\"primary\" name =\"SaveScreenSetup\">Save</Button>\n                </Col>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Test Development Tool Set Up</CardHeader>\n            <CardBody>\n              <Form>\n\t\t\t\t        <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                  Development Tool*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"defaultmanualdevtool\" value ={this.state.manualdevtool} onChange={this.UpdateManualDevtool.bind(this)}>\n\t\t\t\t\t          <option>Test Rail</option>\n                    <option>Zypher</option>\n                    <option>Test Link</option>\n                    <option>QMetry</option>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                  URL*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkmanualdevURL} type=\"input\" name=\"manualdevURL\" value ={this.state.manualdevURL} onChange={this.UpdatesManualDevURL.bind(this)}>\n\t\t\t\t\t          </Input>\n                    <FormFeedback>\n                      {this.state.feedbackManualDevURL}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                  Username*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkdevtoolUsername} type=\"input\" name=\"defaultapplicationType\" value ={this.state.devtoolUserName} onChange={this.UpdatedevUserName.bind(this)}>\n\t\t\t\t\t          </Input>\n                    <FormFeedback>\n                      {this.state.feedbackUpdatedevUserName}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                  Password*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkdevtoolPassword} type=\"password\" name=\"defaultapplicationType\" value ={this.state.devtoolPassword} onChange={this.UpdatedevPassword.bind(this)}>\n\t\t\t\t\t          </Input>\n                    <FormFeedback>\n                      {this.state.feedbackUpdatedevPassword}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>\n                <Col >\n                  <Button disabled={this.state.pageloadingStatus} onClick={this.SaveManualDevToolInfo.bind(this)} color=\"primary\" name =\"SaveDevToolInfo\">Save</Button>\n                </Col>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n  }\n};\n\nexport default Configuration;\n"],"sourceRoot":""}