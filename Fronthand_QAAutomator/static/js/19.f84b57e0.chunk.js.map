{"version":3,"sources":["components/Typography.js","components/Page.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/v4.js","utils/colors.js","../node_modules/lodash.tonumber/index.js","../node_modules/reactstrap/es/Progress.js","pages/API/ExecutionLabPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","Tag","tag","className","type","restProps","classes","classNames","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","length","map","name","active","index","key","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","undefined","uuid","toLowerCase","validate","TypeError","REGEX","test","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","v4","options","buf","rnds","random","getColor","availableColor","window","getComputedStyle","document","documentElement","getPropertyValue","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","objectToString","Object","prototype","isObject","value","module","exports","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","slice","propTypes","PropTypes","node","bar","bool","multi","tagPropType","oneOfType","string","number","max","animated","striped","color","barClassName","cssModule","object","Progress","props","attributes","_objectWithoutPropertiesLoose","percent","toNumber","progressClasses","mapToCssModules","progressBarClasses","ProgressBar","React","createElement","style","width","role","_extends","APIBasePath","ENV","APIURL","GetAllEnvName","keys","GetAllGlobalScriptName","GetLineChart","Component","summaryPass","summaryFail","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","executionlabpage","constructor","super","handleOnSelect","row","isSelect","this","setState","selected","state","id","filter","x","handleOnSelectAll","rows","ids","testSuiteData","r","toggle","modalType","modal","tabIndex","Browser","screenshot","runAt","EmailTrigger","FromEmail","FromPassword","ReceiverEmail","checkFromEmai","checkPassword","checkRecemail","testSuiteResponce","modalValidationText","showProgressBar","showProgressText","totalexecutedTestcasen","scriptResponce","wait","allModuleName","allModule","allPassModuleWise","allFailModuleWise","allHTMLHyperlink","ExecutionSuitePath","ConfigurationFile","CommonTestData","loader","loaderLoadTestScripts","ScriptParallelCheck","seGridResponse","ExecutionNature","checkExecutionNature","feedbackExecutionNature","DeviceIP","pageloadingStatus","DefaultEnvironment","EnvName","DefaultComponent","allKnownAPIComponent","executionNature","feedbackFromEmail","feedbackFromPassword","feedbackRecieverEmail","a","fetch","configPage","json","configPageResponse","Request4","Response4","uuidv4","Req4","GetLoaderData","OpenTestSummaryFile","ReportsPath","trim","open","LoadAllAPIScripts","Module","GetApiScripts","ExecuteAPIScripts","env","testscriptCount","message","emailOption","fromEmail","fromPassword","recieverEmail","validator","isEmail","totalselectedTestScript","debugId","executionType","allPostDataItem","allScriptsItem","emailInfo","Number","TestID","testid","TestName","testcasename","moduleName","configjson","ItemValue","valueaf","includes","split","join","error","ChangeJsoncontentforServer","JSON","configAPI","requestOptions","method","headers","body","Request","Response","allTestSuiteData","allHyperlink","TestId","Status","hyperlink","status","getTotalPass","getTotalFail","statusforEachRow","Execution","UpdateEnv","event","target","UpdateModule","updateENV","updateBrowser","updateScreenshot","updateEmailOption","emailoption","UpdateFromEmail","email","UpdatePassword","pwd","UpdateRecieverEmail","UpdateExecutionNature","render","selectRow","mode","onSelect","onSelectAll","testSuitecolumns","dataField","text","headerStyle","textFilter","events","onClick","column","columnIndex","rowIndex","testscriptStatus","gettestId","newValue","height","timeout","visible","lg","md","sm","xs","for","disabled","onChange","col","invalid","placeholder","visibility","isOpen","keyField","columns","hover","condensed","pagination","paginationFactory","sizePerPage","hideSizePerPage","hidePageListOnlyOnePage","filterFactory"],"mappings":"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","file":"static/js/19.f84b57e0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport toNumber from 'lodash.tonumber';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  max: 100\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\"]);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var ProgressBar = multi ? children : React.createElement(\"div\", {\n    className: progressBarClasses,\n    style: {\n      width: percent + \"%\"\n    },\n    role: \"progressbar\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": max,\n    children: children\n  });\n\n  if (bar) {\n    return ProgressBar;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: progressClasses,\n    children: ProgressBar\n  }));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;","import Page from 'components/Page';\nimport React from 'react';\nimport { getColor } from 'utils/colors';\nimport { Pie, Bar} from 'react-chartjs-2';\nimport {\n  Button,\n  FormFeedback,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Progress,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from 'reactstrap';\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n//import all the components we are going to use.\nimport { v4 as uuidv4 } from 'uuid';\nimport validator from 'validator';\n\nvar APIBasePath= window.ENV.APIURL;\n\nfunction GetAllEnvName({ options }) {\n\n  return (\n    Object.keys(options).map((key)  => \n    <option >{key}</option>)\n  );\n  \n}\nfunction GetPieChart(summaryPass,summaryFail) {\n  return {\n    datasets: [\n      {\n        data: [summaryPass, summaryFail],\n        backgroundColor: [\n          getColor('success'),\n          getColor('danger'),\n        ],\n      },\n    ],\n    labels: ['PASS', 'FAIL'],\n  };\n}\nfunction GetAllGlobalScriptName({ options }) {\n\n  return (\n    Object.keys(options).map((key)  => \n    <option >{options[key]}</option>)\n  );\n  \n}\nfunction ChangeJsoncontentforServer(ItemValue)\n{\n  try{\n\tvar valueaf =[];\n  if(ItemValue.includes(\"+\"))\n  {\n\t valueaf = ItemValue.split('+')\n\tItemValue= valueaf.join('auplussignau')\n  }\n  if(ItemValue.includes(\":\"))\n  {\n\t valueaf = ItemValue.split(':')\n\tItemValue= valueaf.join('aucolumnsignau')\n  }\n  if(ItemValue.includes(\"{\"))\n  {\n\t valueaf = ItemValue.split('{')\n\tItemValue= valueaf.join('aucurlyopenbracketau')\n  }\n  if(ItemValue.includes(\"}\"))\n  {\n\t valueaf = ItemValue.split('}')\n\tItemValue= valueaf.join('aucurlyclosebracketau')\n  }\n  if(ItemValue.includes(\"[\"))\n  {\n\t valueaf = ItemValue.split('[')\n\tItemValue= valueaf.join('aubigopenbracketau')\n  }\n  if(ItemValue.includes(\"]\"))\n  {\n\t valueaf = ItemValue.split(']')\n\tItemValue= valueaf.join('aubigclosebracketau')\n  }\n  if(ItemValue.includes(\"\\\"\"))\n  {\n\t valueaf = ItemValue.split('\\\"')\n\tItemValue= valueaf.join('audoublequotesau')\n  }\n  if(ItemValue.includes(\"=\"))\n  {\n\t valueaf = ItemValue.split('=')\n\tItemValue= valueaf.join('auequalsignau')\n  }\n }\n catch(error)\n {}\n  return ItemValue;\n}\nfunction GetLineChart(Component=[],summaryPass={},summaryFail={}) {\n  return {\n    labels: Component,\n    datasets: [\n      {\n        label: 'PASS',\n        backgroundColor: getColor('success'),\n        borderColor: getColor('success'),\n        borderWidth: 1,\n        data: [\n          ...summaryPass,\n        ],\n      },\n      {\n        label: 'FAIL',\n        backgroundColor: getColor('danger'),\n        borderColor: getColor('danger'),\n        borderWidth: 1,\n        data: [\n          ...summaryFail,\n        ],\n      },\n    ],\n  };\n}\nfunction GetListvalueFromJsonResponce(options) \n{\n  let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n\t));\n\treturn allitem;\n}\n\nfunction GetModule(TestSuite,Index,executableTestscript)\n{\n  var Mo= TestSuite[executableTestscript[Index]-1].moduleName;\n  return Mo;\n}\n\nfunction GetTestID(TestSuite,Index,executableTestscript)\n{\n  var testID =TestSuite[executableTestscript[Index]-1].testid;\n  return testID;\n}\n\nfunction GetTestName(TestSuite,Index,executableTestscript)\n{\n  var testName= TestSuite[executableTestscript[Index]-1].testcasename;\n  return testName;\n}\n\nfunction TestInformationForTestSummaryReports(Mo,testID,testName,Status,reportPath,duration)\n{\n  var jstestStepData={};\n  jstestStepData[\"Module\"]=Mo;\n  jstestStepData[\"testid\"]=testID\n  jstestStepData[\"testcasename\"]=testName;\n  jstestStepData[\"status\"]=Status;\n  reportPath= reportPath.split('\\\\').join('{')\n  jstestStepData[\"reportpath\"]=reportPath;\n  jstestStepData[\"duration\"]=duration;\n  return jstestStepData;\n}\n\nclass executionlabpage extends React.Component{\n  constructor(props)\n  {\n\t\tsuper(props);\n    this.state=\n    {\n      tabIndex:0,\n      ENV:'',\n      Browser:'',\n      screenshot :'FOR EACH STEP',\n      runAt :'SELENIUM GRID',\n      EmailTrigger:'NO',\n      FromEmail:'',\n      FromPassword:'',\n      ReceiverEmail:'',\n      checkFromEmai:false,\n      checkPassword:false,\n      checkRecemail:false,\n      testSuiteResponce:[],\n      testSuiteData: [],\n      modal: false,\n      modalValidationText:'',\n      selected:[],\n      showProgressBar:false,\n      showProgressText:false,\n      totalexecutedTestcasen:0,\n      scriptResponce :'Not Started',\n      wait:false,\n      summaryPass:0,\n      summaryFail:0,\n      //allModule :['PLP','PIP'],\n      allModuleName:[],\n      allModule :[],\n      allPassModuleWise:[],\n      allFailModuleWise:[],\n      allHTMLHyperlink:[],\n      ExecutionSuitePath:'',\n      ConfigurationFile:[],\n      CommonTestData:[],\n      loader:true,\n      loaderLoadTestScripts:false,\n      ScriptParallelCheck:false,\n      seGridResponse:false,\n      ExecutionNature:'',\n      checkExecutionNature:false,\n      feedbackExecutionNature:'Debugging:Reports will not included in dashboard.',\n      DeviceIP:'',\n      pageloadingStatus :true,\n      DefaultEnvironment : '',\n      EnvName:[],\n      DefaultComponent:'All',\n      allKnownAPIComponent:[],\n      executionNature:'Debugging',\n      feedbackFromEmail:'',\n      feedbackFromPassword:'',\n      feedbackRecieverEmail:'',\n\n    }\n\n    const GetLoaderData = async () => \n    {\n      this.setState({loader:true})\n      this.setState({pageloadingStatus:true})\n      const configPage = await fetch(APIBasePath+'apiconfig');\n      const configPageResponse = await configPage.json();\n      if(Object.keys(configPageResponse).length>0)\n      {\n          this.setState({ConfigurationFile:configPageResponse});\n          this.setState({DefaultEnvironment : configPageResponse['EXECUTIONSETUP']['DefaultEnvironment']});\n          this.setState({EnvName:configPageResponse['ENVIRONMENTSETUP']})\n          const Req4 = async () => \n          {\n            const Request4 = await fetch(APIBasePath+'Updateapiscripts')\n            const Response4 = await Request4.json();\n            if(Object.keys(Response4).length>0)\n            {\n            this.setState({allKnownAPIComponent:Response4})\n            this.setState({DeviceIP:uuidv4()});\n            }\n            this.setState({loader:false});\n            this.setState({pageloadingStatus:false});\n          }\n          Req4();\n      }\n    }\n    GetLoaderData()\n\n  }\n\n  OpenTestSummaryFile()\n  {\n    var ReportsPath = this.state.ExecutionSuitePath;\n    if(ReportsPath.trim()===\"\")\n    {\n      return;\n    }\n    window.open(ReportsPath);\n    \n  }\n  LoadAllAPIScripts()\n  {\n    var Module = this.state.DefaultComponent.trim();\n    const GetApiScripts = async () => \n    {\n      this.setState({loaderLoadTestScripts:true});\n      this.setState({loader:true});\n      const configPage = await fetch(APIBasePath+'apiexecution?module='+Module);\n      const configPageResponse = await configPage.json();\n      this.setState({testSuiteData:configPageResponse});\n      this.setState({selected:[]});\n      this.setState({loaderLoadTestScripts:false});\n      this.setState({loader:false});\n    }\n    GetApiScripts()\n  }\n\n  ExecuteAPIScripts()\n  {\n    this.setState({DeviceIP:uuidv4()});\n    this.setState({modal:true})\n    var env = this.state.DefaultEnvironment;\n    var testscriptCount = this.state.testSuiteData;\n    if(testscriptCount.length===0)\n    {\n      this.setState({modal:true})\n      return this.setState({modalValidationText:'Please Load test scripts before execution.'})\n    }\n    else{\n      this.setState({modal:false})\n    }\n    var message='';\n    var emailOption = this.state.EmailTrigger;\n    var fromEmail = this.state.FromEmail;\n    var fromPassword = this.state.FromPassword;\n    var recieverEmail = this.state.ReceiverEmail;\n    if(emailOption.trim()==='YES')\n    {\n      if (!validator.isEmail(fromEmail)) \n      {\n         message ='Email Address is not valid.';\n         this.setState({checkFromEmai:true})\n         this.setState({feedbackFromEmail:'Email Address is not valid.'})\n      }\n      if(fromPassword.trim()==='')\n      {\n        message =message+'Password can not be blank.';\n        this.setState({checkPassword:true})\n        this.setState({feedbackFromPassword:'Password can not be blank.'})\n      }\n      if (!validator.isEmail(recieverEmail)) \n      {\n         message ='Receiver Email Address is not valid.';\n         this.setState({checkRecemail:true})\n         this.setState({feedbackRecieverEmail:'Receiver Email Address is not valid.'})\n      }\n      if(message !=='')\n      {\n        return;\n      }\n    }\n    var totalselectedTestScript = this.state.selected;\n    if(totalselectedTestScript.length===0)\n    {\n     this.setState({modal:true})\n     return this.setState({modalValidationText:'Please select test script for execution.'})\n    }\n    else{\n      this.setState({modal:false})\n    }\n    var debugId = this.state.DeviceIP;\n    var executionType = this.state.executionNature;\n    var allPostDataItem={};\n    var allScriptsItem={};\n    var emailInfo={};\n    for(let i=0;i<totalselectedTestScript.length;i++)\n    {\n      var index = Number(totalselectedTestScript[i])-1;\n      var TestID= testscriptCount[index].testid;\n      var TestName = testscriptCount[index].testcasename;\n      var Module = testscriptCount[index].moduleName;\n      allScriptsItem[i]=Module+'@'+TestID+'@'+TestName;\n    }\n    allPostDataItem['TestCaseInformation']=allScriptsItem;\n    emailInfo['EmailTrigger']=emailOption;\n    emailInfo['FromEmail']=fromEmail;\n    emailInfo['FromEmailPassword']=fromPassword;\n    emailInfo['RecieverEmailAddress']=recieverEmail;\n    allPostDataItem['EmailInformation']=emailInfo;\n    var configjson = ChangeJsoncontentforServer(JSON.stringify(allPostDataItem));\n    var configAPI =APIBasePath+'apiexecution?env='+env+'&executionNature='+executionType+'&debugId='+debugId;\n    var requestOptions = {\n      method: 'POST',\n     headers: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n      body: configjson\n    };\n    const Execution = async () => \n    {\n      this.setState({loader:true})\n      this.setState({pageloadingStatus:true})\n      const Request = await fetch(configAPI,requestOptions);\n      const Response = await Request.json();\n      this.setState({loader:false})\n      this.setState({pageloadingStatus:false})\n      this.setState({ExecutionSuitePath:Response['TestSummaryLocation']})\n      var allTestSuiteData= this.state.testSuiteData;\n      var allHyperlink={}\n      for(let i=0;i<totalselectedTestScript.length;i++)\n      {\n        var index = Number(totalselectedTestScript[i])-1;\n        var TestId = allTestSuiteData[index].testid;\n        var Status = Response[TestId][\"Status\"];\n        var hyperlink = Response[TestId][\"HtmlLocation\"];\n        allTestSuiteData[index].status=Status;\n        allHyperlink[TestId]=hyperlink;\n        \n      }\n      this.setState({allHTMLHyperlink:allHyperlink})\n      this.setState({testSuiteData:allTestSuiteData})\n      var getTotalPass=0;\n      var getTotalFail=0;\n      for(let i=0;i<allTestSuiteData.length;i++)\n      {\n        var statusforEachRow = allTestSuiteData[i].status;\n        if(statusforEachRow==='PASS')\n        {\n          getTotalPass=getTotalPass+1;\n        }\n        if(statusforEachRow==='FAIL')\n        {\n          getTotalFail=getTotalFail+1;\n        }\n      }\n      this.setState({summaryPass:getTotalPass});\n      this.setState({summaryFail:getTotalFail});\n\n    }\n    Execution()\n  }\n  UpdateEnv(event)\n  {\n    var env = event.target.value;\n    if(env !== this.state.DefaultEnvironment)\n    {\n      this.setState({DefaultEnvironment: env})\n    } \n  }\n  UpdateModule(event)\n  {\n    var module = event.target.value;\n    if(module !== this.state.DefaultComponent)\n    {\n      this.setState({DefaultComponent: module})\n    } \n  }\n  \n  handleOnSelect = (row, isSelect) => {\n    if (isSelect) {\n      this.setState(() => ({\n        selected: [...this.state.selected, row.id]\n      }));\n    } else {\n      this.setState(() => ({\n        selected: this.state.selected.filter(x => x !== row.id)\n      }));\n    }\n  }\n\n  handleOnSelectAll = (isSelect, rows) => {\n    const ids = this.state.testSuiteData.map(r => r.id);\n    if (isSelect) {\n      this.setState(() => ({\n        selected: ids\n      }));\n    } else {\n      this.setState(() => ({\n        selected: []\n      }));\n    }\n  }\n\n  updateENV(event){\n\t\tthis.setState({ENV : event.target.value})\n    }\n    updateBrowser(event){\n      this.setState({Browser : event.target.value})\n      }\n    updateScreenshot(event){\n      this.setState({screenshot : event.target.value})\n      }\n      updateEmailOption(event)\n      {\n\n        var emailoption = event.target.value;\n        if(emailoption !==this.state.EmailTrigger)\n        {\n          this.setState({checkFromEmai:false});\n          this.setState({checkPassword:false});\n          this.setState({checkRecemail:false});\n        this.setState({EmailTrigger : event.target.value})\n        if(emailoption===\"YES\")\n        {\n          \n          this.setState({FromEmail:this.state.ConfigurationFile['EMAILSETUP']['SenderEmail']});\n          this.setState({FromPassword:this.state.ConfigurationFile['EMAILSETUP']['SenderPassword']});\n          this.setState({ReceiverEmail:this.state.ConfigurationFile['EMAILSETUP']['ReceiverEmail']});\n\n        }\n        else\n        {\n          this.setState({FromEmail:''});\n          this.setState({FromPassword:''});\n          this.setState({ReceiverEmail:''});\n        }\n      }\n      }\n      UpdateFromEmail(event)\n      {\n        this.setState({checkFromEmai:false})\n        var email = event.target.value;\n        if(email.trim() !==this.state.FromEmail)\n        {\n          this.setState({FromEmail : email.trim()})\n          if (!validator.isEmail(email))\n          {\n            this.setState({checkFromEmai:true})\n            this.setState({feedbackFromEmail:\"Email address is not valid\"})\n          }\n          else{\n            this.setState({checkFromEmai:false})\n          }\n        }\n      }\n      UpdatePassword(event)\n      {\n        this.setState({checkPassword:false})\n        var pwd = event.target.value;\n        if(pwd.trim() !==this.state.FromPassword)\n        {\n          this.setState({FromPassword : pwd.trim()})\n          if(pwd.trim()==='')\n          {\n            this.setState({checkPassword:true})\n            this.setState({feedbackFromPassword:'Password can not be blank.'})\n          }\n          else{\n            this.setState({checkPassword:false})\n          }\n        }\n      }\n      UpdateRecieverEmail(event)\n      {\n        this.setState({checkRecemail:false})\n        var email = event.target.value;\n        if(email.trim() !== this.state.ReceiverEmail)\n        {\n          this.setState({ReceiverEmail : email.trim()})\n          if (!validator.isEmail(email))\n          {\n            this.setState({checkRecemail:true})\n            this.setState({feedbackRecieverEmail:\"Email address is not valid\"})\n          }\n          else{\n            this.setState({checkRecemail:false})\n          }\n        }\n      }\n      UpdateExecutionNature(event){\n        this.setState({executionNature : event.target.value})\n        }\n\n      toggle = modalType => () => {\n        if (!modalType) {\n          return this.setState({\n          modal: !this.state.modal,\n          });\n        }\n      \n        this.setState({\n          [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n        });\n        };\n        \n\n  render() {\n\n\n\t  const selectRow = {\n      mode: 'checkbox',\n      selected: this.state.selected,\n      onSelect: this.handleOnSelect,\n      onSelectAll: this.handleOnSelectAll\n      };\n    const options = {\n      sizePerPage: 10,\n      hideSizePerPage: true,\n      hidePageListOnlyOnePage: true\n      };\n    const testSuitecolumns = [\n      {\n        dataField: 'id',\n        text: '#',\n        headerStyle: { width: '50px' },\n      },\n      {\n        dataField: 'moduleName',\n        text: 'Module Name',\n        headerStyle: { width: '200px' },\n        filter: textFilter()\n      },\n      {\n        dataField: 'testid',\n        text: 'Test ID',\n        headerStyle: { width: '200px' },\n        filter: textFilter()\n      },\n      {\n        dataField: 'testcasename',\n        text: 'Test Case Name',\n        filter: textFilter()\n      },\n      {\n        dataField: 'status',\n        text: 'Status',\n        events: {\n          onClick: (e, column, columnIndex, row, rowIndex)=> {\n            var testscriptStatus = row.status;\n            if(testscriptStatus===\"PASS\" || testscriptStatus===\"FAIL\")\n            {\n              var gettestId = row.testid\n              var ReportsPath= this.state.allHTMLHyperlink[gettestId];\n              window.open(ReportsPath);\n            }\n          }\n        },\n        headerStyle: { width: '120px' },\n        filter: textFilter(),\n        style: (newValue) => {\n          if (newValue=== 'FAIL') {\n            return {\n              backgroundColor: '#dc3545'\n            };\n          };\n          if (newValue=== 'PASS') {\n            return {\n              backgroundColor: '#28a745'\n            };\n          };\n        },\n        \n      }\n    ];\n\n  return (\n    <Page title=\"Execution Lab\" breadcrumbs={[{ name: 'Execution Lab', active: true }]}>\n      <Loader \n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={50}\n        width={100}\n        timeout={120000} //3 secs\n        visible = {this.state.loader}\n      /> \n\t  <Row>\n    <Col lg={6} md={6} sm={6} xs={6}>\n          <Card>\n            <CardHeader>Environment*\n            </CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Environment*\n                  </Label>\n                  <Col>\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"envlist\" value ={this.state.DefaultEnvironment} onChange={this.UpdateEnv.bind(this)}>\n                    <GetAllEnvName options={this.state.EnvName} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Component*\n                  </Label>\n                  <Col>\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"envlist\" value ={this.state.DefaultComponent} onChange={this.UpdateModule.bind(this)}>\n                      <option>All</option>\n                      <GetAllGlobalScriptName options={this.state.allKnownAPIComponent} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Execution Nature*\n                  </Label>\n                  <Col>\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"executionNature\" value ={this.state.executionNature} onChange={this.UpdateExecutionNature.bind(this)}>\n                    <option>Debugging</option>\n                    <option>Functional</option>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={6} md={6} sm={6} xs={6}>\n          <Card>\n            <CardHeader>Email Configuration</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={5}>\n                    Email Trigger*\n                  </Label>\n                  <Col>\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"email\"  value={this.state.EmailTrigger} onChange={this.updateEmailOption.bind(this)}>\n\t\t\t\t\t            <option>YES</option>\n                      <option>NO</option>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t       <FormGroup col>\n\t\t\t          \t<Label for=\"exampleSelect\" sm={5}>\n                    From Email\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkFromEmai} type=\"input\" value={this.state.FromEmail} onChange={this.UpdateFromEmail.bind(this)} type=\"input\" name=\"fromemail\" placeholder=\"enter your Email Address\"/>\n                    <FormFeedback>\n                      {this.state.feedbackFromEmail}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>{' '}\n\t\t\t\t      <FormGroup col>\n\t\t\t        \t<Label for=\"exampleSelect\" sm={5}>\n                    Password\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkPassword} type=\"password\" value={this.state.FromPassword} onChange={this.UpdatePassword.bind(this)} name=\"fromPassword\" placeholder=\"enter your Password\"/>\n                    <FormFeedback>\n                      {this.state.feedbackFromPassword}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>{' '}\n\t\t\t\t      <FormGroup col>\n\t\t\t\t        <Label for=\"exampleSelect\" sm={5}>\n                    Receiver Email\n                  </Label>\n                 <Col >\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkRecemail} type=\"input\" value={this.state.ReceiverEmail} onChange={this.UpdateRecieverEmail.bind(this)} name=\"receiveremail\" placeholder=\"enter your Receiver email\"/>\n                    <FormFeedback>\n                      {this.state.feedbackRecieverEmail}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>{' '}\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t  \t<Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Executable Test Scripts\n            <Button disabled={this.state.pageloadingStatus} onClick={this.LoadAllAPIScripts.bind(this)} name =\"loadTestSuite\" color=\"primary\">Load Test Scripts</Button>\n            <Button disabled={this.state.pageloadingStatus} onClick={this.ExecuteAPIScripts.bind(this)} name =\"executeTC\" color=\"primary\">Execute Test Scripts</Button>\n             <div  style={{visibility: this.state.showProgressText ? 'visible' : 'hidden' }} className=\"text-center\">{this.state.totalexecutedTestcasen} of {this.state.selected.length}</div>\n              <Loader \n                type=\"ThreeDots\"\n                color=\"#00BFFF\"\n                height={30}\n                width={100}\n                timeout={120000} //3 secs\n                visible = {this.state.loaderLoadTestScripts}\n              />\n              <Progress style={{visibility: this.state.showProgressBar ? 'visible' : 'hidden' }} value= {this.state.totalexecutedTestcasen} max={this.state.selected.length} />\n               <Modal\n                      isOpen={this.state.modal}\n                      toggle={this.toggle()}\n                      className={this.props.className}>\n                      <ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n                      <ModalBody >\n                        {this.state.modalValidationText}\n                      </ModalBody>\n                      <ModalFooter>\n                        <Button disabled={this.state.pageloadingStatus} color=\"secondary\" onClick={this.toggle()}>\n                          OK\n                        </Button>\n                      </ModalFooter>\n            </Modal>\n              \n            </CardHeader>\n            <CardBody>\n            <BootstrapTable\n              keyField=\"id\"\n              data={ this.state.testSuiteData }\n              columns={ testSuitecolumns }\n              striped\n              hover\n              condensed\n              pagination={ paginationFactory(options) }\n              selectRow={ selectRow }\n              filter={ filterFactory() }\n              disabled={this.state.pageloadingStatus}\n            />\n            </CardBody>\n          </Card>\n        </Col>\t\t\t\n    </Row>\n\t\t<Row>\n        <Col lg={4} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Total Pass Fail Count</CardHeader>\n\t\t\t        <CardBody onClick={this.OpenTestSummaryFile.bind(this)}>\n              <Pie disabled={this.state.pageloadingStatus} data={GetPieChart(this.state.summaryPass,this.state.summaryFail)} />\n            </CardBody>\n          </Card>\n        </Col>\n\t\t<Col lg={8} md={6} sm={6} xs={12}>\n\t\t<Card>\n            <CardHeader>Pass Fail Count Module wise</CardHeader>\n\t\t\t      <CardBody>\n            <Bar disabled={this.state.pageloadingStatus}\n                data={GetLineChart(this.state.allModule,this.state.allPassModuleWise,this.state.allFailModuleWise)}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </Page>\n   );\n}\n};\n\n\nexport default executionlabpage;"],"sourceRoot":""}