{"version":3,"sources":["components/Typography.js","pages/funcLibraries/GenericHelper.js","components/Page.js","utils/colors.js","pages/funcLibraries/graph.js","pages/funcLibraries/funcAPIScripts.js","components/Widget/NumberWidget.js","components/Widget/IconWidget.js","pages/API/APISwagger.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","Tag","tag","className","type","restProps","classes","classNames","defaultProps","common_deleteIteminJarrayBasedonIndex","Item","index","key","testData","filter","m","id","i","length","error","common_AddIteminJarrayBasedonIndex","keyList","allItem","Number","NewItemContent","push","common_checkblankvalueinJarray","trim","common_CheckValueFromJson","options","checkvalue","allitem","Object","keys","map","toLowerCase","common_GetListvalueFromJsonResponce","common_GetListKeyFromJsonResponce","common_ChangeJsoncontentforServer","ItemValue","valueaf","includes","split","join","checkJsonFormat","sampleJSON","JSON","parse","Exception","getListItem","Input","labelName","common_RemoveItesmfromListinJobject","ListItem","RemoveItem","count","outputData","keyName","bem","bn","create","Page","title","breadcrumbs","children","b","e","name","active","getColor","availableColor","window","getComputedStyle","document","documentElement","getPropertyValue","GetPieChart","summaryPass","summaryFail","datasets","data","backgroundColor","labels","GetLineChart","Component","label","borderColor","borderWidth","GetDoughnutChart_Dynamic","color","genericHelper","GetBarChart","xaxisLabel","passData","failData","fill","genLineChart","genLineDataforModuleFail","genTimeDuration","GetBarChartCustomLabelandColor","lable1","lable2","col1","col2","PreResponseVariableSave","JsonItems","APIData","testdata","varname","resvalue","SetHttpHeaderData","headername","headervalue","createAuthCredData","allJsonItem","setAPIBody","apiBodyContent","NumberWidget","subtitle","number","progress","value","Card","body","CardText","CardTitle","IconWidget","bgColor","Icon","icon","iconProps","inverse","CardBody","size","CardSubtitle","APIBasePath","ENV","APIURL","GetOptionKeys","CICDSupport","React","constructor","props","super","toggle","modalType","this","setState","modal","state","pageloadingStatus","loader","loaderLoadTestScripts","checkswaggerURL","swaggerURL","feedbackswaggerURL","swaggerJsonBody","checkswaggerJsonBody","feedbackswaggerJsonBody","disableswaggerJson","swaggerSelection","disableswaggerUrl","disableSaveApi","swaggerJsonResponse","totalController","totalEndPoint","totalHttpMethodDetails","totalAPICount","totaltestScriptDevStatus","allComponentName","allmodulehttpmethod","allmoduletestscriptcreated","totalAPIScriptCount","DefaultEnvironment","EnvName","componentURI","allCoponentURIList","AuthcredenKey","allAuthCredentialData","constAPICall","checkComponentURI","feedbackURIComponent","a","fetch","configPage","json","configPageResponse","ConfigurationFile","funcAPIScripts","defenv","GetLoaderData","selectSwaggerselection","event","item","target","UpdateComponentURI","comURI","env","URI","UpdateEnv","APIURI","relativeURI","UpdateSwaggerURL","validator","isURL","validateSwaggerURL","requestBody","selectedItem","httpBody","httpBodyContent","requestAPI","requestOptions","method","headers","stringify","Request","Response","success","modalValidationText","REQ","saveApiScripts","baseURL","AuthKey","JsonBody","console","log","UpdateAuthKeyData","authKey","UpdateSwaggerJson","isJSON","render","height","width","timeout","visible","lg","md","sm","xs","row","for","disabled","onChange","bind","invalid","placeholder","onClick","style","minHeight","isOpen","xl","graph","scales","yAxes","ticks","beginAtZero"],"mappings":"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","file":"static/js/25.9aa7210e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","export default\n{\n    common_deleteIteminJarrayBasedonIndex(Item,index,key) \n    {\n        try{\n            var testData = Item.filter(m => m.id !== index);\n            for(let i=index;i<=testData.length;i++)\n            {\n                testData[i-1][key]=i;\n            }\n            return testData;\n        }\n        catch(error)\n        {}\n        return Item;\n    },\n    common_AddIteminJarrayBasedonIndex(Item,index,keyList,key) \n    {\n        try{\n            var allItem=[]\n            for(let i=0;i<Number(index);i++)\n            {\n                allItem[i]= Item[i];\n            }\n            var NewItemContent ={};\n            for(let i=0;i<keyList.length;i++)\n            {\n                NewItemContent[keyList[i]]='';\n            }\n            NewItemContent[key]=Number(index)+1;\n            allItem.push(NewItemContent)\n            for(let i=Number(index);i<Item.length;i++)\n            {\n                Item[i]['id']=Number(i)+2;\n                allItem.push(Item[i]);\n            }\n            return allItem;\n        }\n        catch(error)\n        {}\n        return Item;\n    },\n\n    common_checkblankvalueinJarray(Item,key) \n    {\n        try{\n            for(let i=0;i<=Item.length;i++)\n            {\n                if(Item[i][key].trim()==='')\n                {\n                    return true\n                }\n            }\n            return false;\n        }\n        catch(error)\n        {}\n        return false;\n    },\n\n    common_CheckValueFromJson( options,checkvalue) \n    {\n     let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n    ));\n    for (let i = 0; i < allitem.length; i++) \n    {\n      if(allitem[i].trim().toLowerCase()===checkvalue.trim().toLowerCase())\n      {\n        return true;\n      }\n    }\n    return false;\n    },\n\n    common_GetListvalueFromJsonResponce(options) \n    {\n        let allitem = [];\n        try{\n            Object.keys(options).map((key) => (\n            allitem.push(options[key])\n            ));\n            }\n        catch(error)\n        {}\n        return allitem;\n    },\n    common_GetListKeyFromJsonResponce(options) \n    {\n        let allitem = []\n        Object.keys(options).map((key) => (\n        allitem.push(key)\n        ));\n        return allitem;\n    },\n\n    common_ChangeJsoncontentforServer(ItemValue)\n    {\n    try{\n        var valueaf =[];\n    if(ItemValue.includes(\"+\"))\n    {\n        valueaf = ItemValue.split('+')\n        ItemValue= valueaf.join('auplussignau')\n    }\n    if(ItemValue.includes(\":\"))\n    {\n        valueaf = ItemValue.split(':')\n        ItemValue= valueaf.join('aucolumnsignau')\n    }\n    if(ItemValue.includes(\"{\"))\n    {\n        valueaf = ItemValue.split('{')\n        ItemValue= valueaf.join('aucurlyopenbracketau')\n    }\n    if(ItemValue.includes(\"}\"))\n    {\n        valueaf = ItemValue.split('}')\n        ItemValue= valueaf.join('aucurlyclosebracketau')\n    }\n    if(ItemValue.includes(\"[\"))\n    {\n        valueaf = ItemValue.split('[')\n        ItemValue= valueaf.join('aubigopenbracketau')\n    }\n    if(ItemValue.includes(\"]\"))\n    {\n        valueaf = ItemValue.split(']')\n        ItemValue= valueaf.join('aubigclosebracketau')\n    }\n    if(ItemValue.includes('\"'))\n    {\n        valueaf = ItemValue.split('\"')\n        ItemValue= valueaf.join('audoublequotesau')\n    }\n    if(ItemValue.includes(\"=\"))\n    {\n        valueaf = ItemValue.split('=')\n        ItemValue= valueaf.join('auequalsignau')\n    }\n    }\n    catch(error)\n    {}\n    return ItemValue;\n    },\n\n    checkJsonFormat(sampleJSON)\n    {\n        if(sampleJSON.trim()==='')\n        {\n          return true;\n        }\n        try{\n         JSON.parse(sampleJSON);\n         return true;\n        }\n        catch(Exception)\n        {}\n        return false;\n    },\n    getListItem(Input,labelName)\n    {\n      let allitem = [];\n      try{\n      for(let i =0;i<Object.keys(Input).length;i++)\n      {\n          allitem.push(Input[i][labelName])\n      }\n      }\n      catch(error)\n      {}\n      return allitem;\n    },\n\n     common_RemoveItesmfromListinJobject(ListItem,RemoveItem) \n    {\n  let count = Object.keys(ListItem).length;\n  let outputData={};\n  for(let i=1;i<=count;i++)\n  {\n\tvar keyName =Object.keys(ListItem)[i-1];\n\tif(keyName.trim().toLowerCase()!==RemoveItem.trim().toLowerCase())\n\t{\n\t\toutputData[keyName]=ListItem[keyName];\n\t}\n\t\n  }\n  return outputData;\n}\n\n}\n\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import { getColor } from 'utils/colors';\nimport genericHelper from '../funcLibraries/GenericHelper.js';\nexport default\n{\n   GetPieChart(summaryPass,summaryFail) {\n    return {\n      datasets: [\n        {\n          data: [summaryPass, summaryFail],\n          backgroundColor: [\n            getColor('success'),\n            getColor('danger'),\n          ],\n        },\n      ],\n      labels: ['PASS', 'FAIL'],\n    };\n  },\n\n  GetLineChart(Component=[],summaryPass={},summaryFail={}) {\n    return {\n      labels: Component,\n      datasets: [\n        {\n          label: 'PASS',\n          backgroundColor: getColor('success'),\n          borderColor: getColor('success'),\n          borderWidth: 1,\n          data: [\n            ...summaryPass,\n          ],\n        },\n        {\n          label: 'FAIL',\n          backgroundColor: getColor('danger'),\n          borderColor: getColor('danger'),\n          borderWidth: 1,\n          data: [\n            ...summaryFail,\n          ],\n        },\n      ],\n    };\n    \n  },\n  GetDoughnutChart_Dynamic(Input) {\n    try{\n    var label = Input['label'];\n    var data = Input['data'];\n    var color = Input['color'];\n    return {\n      datasets: [\n      {\n        data: genericHelper.getListItem(data,'data'),\n        backgroundColor: genericHelper.getListItem(color,'color')\n      },\n      ],\n      labels: genericHelper.getListItem(label,'label'),\n    };\n   }\n   catch(error)\n   {}\n  },\n   GetBarChart(xaxisLabel,passData,failData) {\n    return {\n      labels: xaxisLabel,\n      datasets: [\n        {\n          label: 'PASS',\n          backgroundColor: getColor('success'),\n          borderColor: getColor('success'),\n          borderWidth: 1,\n          type: 'bar',\n          fill: true,\n          data: passData,\n        },\n        {\n          label: 'FAIL',\n          backgroundColor: getColor('danger'),\n          borderColor: getColor('danger'),\n          borderWidth: 1,\n          type: 'bar',\n          fill: true,\n          data: failData,\n        },\n      ],\n    };\n  },\n  genLineChart(Component,summaryPass){\n    return {\n      labels: Component,\n      datasets: [\n        {\n          label: 'Execution Time',\n          backgroundColor: getColor('primary'),\n          borderColor: getColor('primary'),\n          borderWidth: 1,\n          data: summaryPass,\n          fill: false\n        }\n      ],\n    };\n  },\n   genLineDataforModuleFail(Component=[],summaryPass={},summaryFail={}){\n    return {\n      labels: Component,\n      datasets: [\n        {\n          label: 'PASS',\n          backgroundColor: getColor('success'),\n          borderColor: getColor('success'),\n          borderWidth: 1,\n          data: summaryPass,\n          fill: false\n        },\n        {\n          label: 'FAIL',\n          backgroundColor: getColor('danger'),\n          borderColor: getColor('danger'),\n          borderWidth: 1,\n          data: summaryFail,\n          fill: false\n        },\n      ],\n    };\n  },\n   genTimeDuration(Component=[],summaryPass={}){\n     try{\n    return {\n      labels: Component,\n      datasets: [\n        {\n          label: 'Execution Time in minutes',\n          backgroundColor: getColor('primary'),\n          borderColor: getColor('primary'),\n          borderWidth: 1,\n          data: summaryPass,\n          fill: false\n        }\n      ],\n    };\n  }\n  catch(error)\n  {}\n  },\n  GetBarChartCustomLabelandColor(xaxisLabel,passData,failData,lable1,lable2,col1,col2) {\n    return {\n      labels: xaxisLabel,\n      datasets: [\n        {\n          label: lable1,\n          backgroundColor: col1,\n          borderColor: col1,\n          borderWidth: 1,\n          type: 'bar',\n          fill: true,\n          data: passData,\n        },\n        {\n          label: lable2,\n          backgroundColor: col2,\n          borderColor: col2,\n          borderWidth: 1,\n          type: 'bar',\n          fill: true,\n          data: failData,\n        },\n      ],\n    };\n  },\n  \n}\n\n","export default\n{\n    PreResponseVariableSave(JsonItems) \n    {\n        let count = Object.keys(JsonItems).length;\n        let APIData=[];\n        for(let i=1;i<=count;i++)\n        {\n          var keyName =Object.keys(JsonItems)[i-1];\n          var keyVal =JsonItems[keyName];\n          var  testdata={id:i,varname:keyName,resvalue:keyVal};\n          APIData.push(testdata);\n        }\n        return APIData;\n    },\n    SetHttpHeaderData(JsonItems)\n    {\n        let count = Object.keys(JsonItems).length;\n        let APIData=[];\n        for(let i=1;i<=count;i++)\n        {\n          var keyName =Object.keys(JsonItems)[i-1];\n          var keyVal =JsonItems[keyName];\n          var  testdata={id:i,headername:keyName,headervalue:keyVal};\n          APIData.push(testdata);\n        }\n        return APIData;\n    },\n    createAuthCredData(JsonItems)\n    {\n        let count = Object.keys(JsonItems).length;\n        var allJsonItem={};\n        for(let i=0;i<count;i++)\n        {\n          allJsonItem[JsonItems[i]['key']]=JsonItems[i]['key'];\n        }\n        return allJsonItem;\n    },\n\n    setAPIBody(apiBodyContent)\n    {\n        try{\n              return JSON.parse(apiBodyContent);\n        }\n        catch(error)\n        {}\n    },\n}\n\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","import Page from 'components/Page';\nimport React from 'react';\nimport graph from '../funcLibraries/graph.js';\nimport genericHelper from '../funcLibraries/GenericHelper.js';\nimport {NumberWidget } from 'components/Widget';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { Bar, Line ,Doughnut} from 'react-chartjs-2';\nimport funcAPIScripts from '../funcLibraries/funcAPIScripts.js';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  FormFeedback,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport validator from 'validator'\nvar APIBasePath= window.ENV.APIURL;\n\nfunction GetOptionKeys({ options }) {\n\n  return (\n    Object.keys(options).map((key)  => \n    <option >{key}</option>)\n  );\n}\nclass CICDSupport extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state=\n    {\n        pageloadingStatus:false,\n        loader:false,\n        loaderLoadTestScripts:false,\n        checkswaggerURL:false,\n        swaggerURL:'',\n        feedbackswaggerURL:'',\n        swaggerJsonBody:'',\n        checkswaggerJsonBody:false,\n        feedbackswaggerJsonBody:'',\n        disableswaggerJson:true,\n        swaggerSelection:'Url',\n        disableswaggerUrl:false,\n        disableSaveApi:true,\n        swaggerJsonResponse:'',\n        totalController:0,\n        totalEndPoint:0,\n        totalHttpMethodDetails:[],\n        totalAPICount:0,\n        totaltestScriptDevStatus:[],\n        allComponentName:[],\n        allmodulehttpmethod:[],\n        allmoduletestscriptcreated:[],\n        totalAPIScriptCount:0,\n        DefaultEnvironment:'',\n        EnvName:[],\n        componentURI:'',\n        allCoponentURIList:[],\n        AuthcredenKey:'',\n        allAuthCredentialData:[],\n        constAPICall:'',\n        checkComponentURI:false,\n        feedbackURIComponent:'',\n\n    }\n    const GetLoaderData = async () => \n    {\n      this.setState({loader:true});\n      this.setState({pageloadingStatus:true});\n      const configPage = await fetch(APIBasePath+'apiconfig');\n      const configPageResponse = await configPage.json();\n      if(Object.keys(configPageResponse).length>0)\n      {\n          this.setState({ConfigurationFile:configPageResponse});\n          this.setState({allAuthCredentialData : funcAPIScripts.createAuthCredData(configPageResponse['Authorization'])});\n          this.setState({EnvName:configPageResponse['ENVIRONMENTSETUP']})\n          var defenv = configPageResponse['EXECUTIONSETUP']['DefaultEnvironment'];\n          this.setState({DefaultEnvironment : defenv});\n          if(defenv.trim() !=='')\n          {\n            this.setState({allCoponentURIList:configPageResponse['ENVIRONMENTSETUP'][this.state.DefaultEnvironment]})\n          }\n          this.setState({loader:false});\n          this.setState({pageloadingStatus:false});\n      }\n    }\n    GetLoaderData()\n    \n  }\n\n  toggle = modalType => () => {\n    if (!modalType) {\n      return this.setState({\n        modal: !this.state.modal,\n      });\n    }\n\n    this.setState({\n      [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n    });\n  };\n \n  selectSwaggerselection(event)\n  {\n    var item= event.target.value;\n    if(item !== this.state.swaggerSelection)\n    {\n      this.setState({disableSaveApi:true})\n      this.setState({swaggerSelection:item});\n      if(item === 'Url')\n      {\n        this.setState({disableswaggerJson:true})\n        this.setState({disableswaggerUrl:false})\n        this.setState({swaggerJsonBody:''});\n        this.setState({checkswaggerJsonBody:false});\n      }\n      else{\n        this.setState({disableswaggerUrl:true})\n        this.setState({disableswaggerJson:false})\n        this.setState({swaggerURL:''});\n        this.setState({checkswaggerURL:false});\n        \n      }\n    }\n  }\n  UpdateComponentURI(event)\n  {\n    this.setState({checkComponentURI:false})\n    var comURI = event.target.value;\n    if(comURI !== this.state.componentURI)\n    {\n      this.setState({componentURI: comURI})\n      var env= this.state.DefaultEnvironment;\n      if(comURI !=='')\n      {\n        var URI= this.state.ConfigurationFile['ENVIRONMENTSETUP'][env][comURI];\n        this.setState({constAPICall:URI});\n      }\n      else{\n        this.setState({constAPICall:''});\n      }\n    }\n    \n  }\n  UpdateEnv(event)\n  {\n    var env = event.target.value;\n    if(env !== this.state.DefaultEnvironment)\n    {\n      this.setState({DefaultEnvironment: env})\n      this.setState({allCoponentURIList:this.state.ConfigurationFile['ENVIRONMENTSETUP'][env]})\n      this.setState({componentURI:''})\n      this.setState({APIURI:this.state.relativeURI})\n      this.setState({constAPICall:''});\n    }\n  }\n  UpdateSwaggerURL(event)\n  {\n    this.setState({checkswaggerURL:false});\n    this.setState({disableSaveApi:true})\n    var Item= event.target.value;\n    this.setState({swaggerURL: Item.trim()})\n    if(!validator.isURL(Item))\n    {\n        this.setState({checkswaggerURL:true});\n        return this.setState({feedbackswaggerURL:'Url is not valid'});\n    }\n    else\n    {\n      this.setState({checkswaggerURL:false});\n    }\n  }\n  validateSwaggerURL()\n  {\n      var selectedItem = this.state.swaggerSelection;\n      var id = 0;\n      var requestBody ;\n      if(selectedItem ==='Url')\n      {\n        requestBody = this.state.swaggerURL;\n        if(requestBody.trim() ==='')\n        {\n          this.setState({checkswaggerURL:true});\n          this.setState({feedbackswaggerURL:'Url can not be null'});\n          return ;\n        }\n        if(this.state.checkswaggerURL)\n        {\n          return;\n        }\n      }\n      else if(selectedItem ==='Json')\n      {\n        id=1;\n        requestBody = this.state.swaggerJsonBody;\n        if(requestBody.trim() ==='')\n        {\n          this.setState({checkswaggerJsonBody:true});\n          this.setState({feedbackswaggerJsonBody:'Json body can not be null'});\n          return ;\n        }\n        if(this.state.checkswaggerJsonBody)\n        {\n          return;\n        }\n      }\n    //@ send Request to server\n    var httpBody={};\n    httpBody['Body']=requestBody;\n    var httpBodyContent = genericHelper.common_ChangeJsoncontentforServer(httpBody);\n    var requestAPI =APIBasePath+'apiswagger/'+id;\n    var requestOptions = {\n      method: 'POST',\n      headers: {\"Accept\": \"*/*\",'Content-type': 'application/json'},\n      body: JSON.stringify(httpBodyContent)\n    };\n    const REQ = async () => \n    {\n      this.setState({swaggerJsonResponse:''});\n      this.setState({disableSaveApi:true});\n      this.setState({loader:true})\n      this.setState({pageloadingStatus:true});\n      const Request = await fetch(requestAPI,requestOptions);\n      const Response = await Request.json();\n      if(Response.success)\n      {\n        this.setState({swaggerJsonResponse:Response['Json']})\n        this.setState({disableSaveApi:false});\n      }\n      this.setState({loader:false})\n      this.setState({pageloadingStatus:false});\n      this.setState({modal:true})\n      return this.setState({modalValidationText:Response['Message']});\n    }\n    REQ();\n  }\n  saveApiScripts()\n  {\n    var baseURL = this.state.componentURI;\n    var AuthKey = this.state.AuthcredenKey;\n    if(baseURL ==='')\n    {\n      this.setState({checkComponentURI:true});\n      this.setState({feedbackURIComponent:'URL Key can not be blank'})\n      return;\n    }\n      var JsonBody = this.state.swaggerJsonResponse;\n      console.log(JsonBody);\n      if(JsonBody.length ==0)\n      {\n        this.setState({modal:true});\n        return this.setState({modalValidationText:'Unable to create API scripts becuase Swagger Json is not correct format.'});\n      }\n          //@ send Request to server\n    var httpBody={};\n    httpBody['Body']=JsonBody;\n    httpBody['baseURL']=baseURL;\n    httpBody['authKey']=AuthKey;\n    var httpBodyContent = genericHelper.common_ChangeJsoncontentforServer(httpBody);\n    var requestAPI =APIBasePath+'apiswagger';\n    var requestOptions = {\n      method: 'POST',\n      headers: {\"Accept\": \"*/*\",'Content-type': 'application/json'},\n      body: JSON.stringify(httpBodyContent)\n    };\n      const REQ = async () => \n      {\n        this.setState({swaggerJsonResponse:''});\n        this.setState({disableSaveApi:true});\n        this.setState({loader:true})\n        this.setState({pageloadingStatus:true});\n        const Request = await fetch(requestAPI,requestOptions);\n        const Response = await Request.json();\n        console.log(Response);\n        if(Response.success)\n        {\n          this.setState({totalEndPoint:Response['allendpoint']})\n          this.setState({totalController:Response['totalcontroller']})\n          this.setState({totalAPICount:Response['httpmethodcount']})\n          this.setState({totalHttpMethodDetails:Response['httpmethoddata']})\n          this.setState({totaltestScriptDevStatus:Response['scriptdevstatus']})\n          this.setState({totalAPIScriptCount:Response['totalscriptcount']})\n         this.setState({allComponentName:genericHelper.common_GetListKeyFromJsonResponce(Response['componentdata'])})\n         this.setState({allmodulehttpmethod:genericHelper.common_GetListvalueFromJsonResponce(Response['componentdata'])})\n         this.setState({allmoduletestscriptcreated:genericHelper.common_GetListvalueFromJsonResponce(Response['testscriptcreated'])})\n          this.setState({disableSaveApi:true});\n        }\n        this.setState({loader:false})\n        this.setState({pageloadingStatus:false});\n        this.setState({modal:true})\n        return this.setState({modalValidationText:Response['Message']});\n      }\n      REQ();\n  }\n  UpdateAuthKeyData(event)\n  {\n    var authKey = event.target.value;\n    if(authKey !==this.state.AuthcredenKey)\n    {\n      this.setState({AuthcredenKey:authKey});\n    }\n  }\n  UpdateSwaggerJson(event)\n  {\n    this.setState({checkswaggerJsonBody:false});\n    this.setState({disableSaveApi:true})\n    var Item= event.target.value;\n    this.setState({swaggerJsonBody: Item.trim()})\n    if(!validator.isJSON(Item))\n    {\n        this.setState({checkswaggerJsonBody:true});\n        return this.setState({feedbackswaggerJsonBody:'Json content is not valid'});\n    }\n    else\n    {\n      this.setState({checkswaggerJsonBody:false});\n    }\n  }\n  render() {\n    const textareaModal = {\n      minHeight:'458px'};\n  return (\n    <Page title=\"API script using Swagger\" breadcrumbs={[{ name: 'API script Development using Swagger', active: true }]}>\n      <Loader \n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={50}\n        width={100}\n        timeout={120000} //3 secs\n        visible = {this.state.loader}\n      />\n      <Row>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Import Scripts</CardHeader>\n              <CardBody>\n              <Form >\n              <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={4}>\n                    Environment*\n                  </Label>\n                  <Col>\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"envlist\" value ={this.state.DefaultEnvironment} onChange={this.UpdateEnv.bind(this)}>\n                      <GetOptionKeys options={this.state.EnvName} />\n\t\t\t\t\t          </Input>\n                  </Col>\n              </FormGroup>\n              <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={4}>\n                  URL key*\n                  </Label>\n                  <Col>\n                    <Input disabled={this.state.pageloadingStatus} invalid={this.state.checkComponentURI} type=\"select\" name=\"comurl\" value ={this.state.componentURI} onChange={this.UpdateComponentURI.bind(this)}>\n                     <option></option>\n                      <GetOptionKeys options={this.state.allCoponentURIList} />\n\t\t\t\t\t          </Input>\n                    <FormFeedback>\n                      {this.state.feedbackURIComponent}\n                    </FormFeedback>\n                  </Col>\n               </FormGroup>\n               <FormGroup row>\n\t\t\t          \t<Label for=\"exampleSelect\" sm={4}>\n                     URL*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.disableswaggerUrl}  value={this.state.constAPICall}  type=\"input\" name=\"fromemail\"  placeholder=\"base URL\"/>\n                  </Col>\n                </FormGroup>{' '}\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={4}>\n                  Authorization key\n                  </Label>\n                  <Col>\n                    <Input disabled={this.state.pageloadingStatus} type=\"select\" name=\"comurl\" value ={this.state.AuthcredenKey} onChange={this.UpdateAuthKeyData.bind(this)}>\n                     <option></option>\n                      <GetOptionKeys options={this.state.allAuthCredentialData} />\n                    </Input>\n                  </Col>\n                </FormGroup>\n              <FormGroup row>\n\t\t\t          \t<Label for=\"exampleSelect\" sm={4}>\n                   Select Swagger*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus}  value={this.state.swaggerSelection}  type=\"select\" name=\"swaggerselection\" onChange={this.selectSwaggerselection.bind(this)}>\n                    <option>Url</option>\n                    <option>Json</option>\n                    </Input>\n                  </Col>\n                </FormGroup>{' '}\n\t\t\t\t       <FormGroup row>\n\t\t\t          \t<Label for=\"exampleSelect\" sm={4}>\n                    Swagger Json URL*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.disableswaggerUrl} invalid={this.state.checkswaggerURL}  value={this.state.swaggerURL}  type=\"input\" name=\"fromemail\" onChange={this.UpdateSwaggerURL.bind(this)} placeholder=\"https://example/swagger/v1/swagger.json\"/>\n                    <FormFeedback>\n                      {this.state.feedbackswaggerURL}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>{' '}\n                <FormGroup row>\n                  <Col>\n                  <Button disabled={this.state.pageloadingStatus} onClick={this.validateSwaggerURL.bind(this)} color=\"secondary\" name =\"validate\">Validate</Button>\n                  <Button disabled={this.state.disableSaveApi} onClick={this.saveApiScripts.bind(this)} color=\"secondary\" name =\"save\">Create API Scripts</Button>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Paste Swagger JSON content</CardHeader>\n              <CardBody>\n              <Form >\n              <FormGroup row>\n                  <Col>\n                    <Input disabled={this.state.disableswaggerJson} invalid={this.state.checkswaggerJsonBody} onChange={this.UpdateSwaggerJson.bind(this)} style ={textareaModal} type=\"textarea\" name=\"swaggerJsonvalue\" value ={this.state.swaggerJsonBody} >\n\t\t\t\t\t          </Input>\n                    <FormFeedback>\n                      {this.state.feedbackswaggerJsonBody}\n                   </FormFeedback>\n                  </Col>\n                </FormGroup>\n              </Form>\n              <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggle()}\n                  className={this.props.className}>\n                  <ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n                  <ModalBody >\n                    {this.state.modalValidationText}\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"secondary\" onClick={this.toggle()}>\n                      OK\n                    </Button>\n                  </ModalFooter>\n                </Modal>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n      <Col lg={6} md={6} sm={6} xs={6}>\n        <NumberWidget disabled={this.state.pageloadingStatus}\n          title=\"Total Component/Controller\"\n          number= {this.state.totalController}\n          color=\"primary\"\n        />\n      </Col>\n      <Col lg={6} md={6} sm={6} xs={6}>\n        <NumberWidget disabled={this.state.pageloadingStatus}\n          title=\"Total EndPoint\"\n          number= {this.state.totalEndPoint}\n          color=\"primary\"\n        />\n      </Col>\n      <Col xl={6} >\n          <Card>\n            <CardHeader>Total Http Method Count : {this.state.totalAPICount}</CardHeader>\n            <CardBody>\n\t\t\t        <Col >\n               <Doughnut  data={graph.GetDoughnutChart_Dynamic(this.state.totalHttpMethodDetails)} />\n\t\t\t        </Col>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xl={6} >\n          <Card>\n            <CardHeader>Test script developmant count : {this.state.totalAPIScriptCount}</CardHeader>\n            <CardBody>\n\t\t\t        <Col >\n               <Doughnut  data={graph.GetDoughnutChart_Dynamic(this.state.totaltestScriptDevStatus)} />\n\t\t\t        </Col>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Test Script Development Component/Controller wise\n            </CardHeader>\n            <CardBody>\n            <Bar disabled={this.state.pageloadingStatus} data={graph.GetBarChartCustomLabelandColor(this.state.allComponentName,this.state.allmodulehttpmethod,this.state.allmoduletestscriptcreated,'Total Http method','Total Script created','#45B39D','#DC7633')} \n              options={{\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }]\n                },\n              }}\n            />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n    );\n  }\n};\n\nexport default CICDSupport;\n"],"sourceRoot":""}