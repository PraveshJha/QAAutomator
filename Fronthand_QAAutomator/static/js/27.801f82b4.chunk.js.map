{"version":3,"sources":["components/Typography.js","pages/funcLibraries/GenericHelper.js","components/Page.js","pages/API/APISwagger.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","Tag","tag","className","type","restProps","classes","classNames","defaultProps","common_deleteIteminJarrayBasedonIndex","Item","index","key","testData","filter","m","id","i","length","error","common_AddIteminJarrayBasedonIndex","keyList","allItem","Number","NewItemContent","push","common_checkblankvalueinJarray","trim","common_CheckValueFromJson","options","checkvalue","allitem","Object","keys","map","toLowerCase","common_GetListvalueFromJsonResponce","common_GetListKeyFromJsonResponce","common_ChangeJsoncontentforServer","ItemValue","valueaf","includes","split","join","checkJsonFormat","sampleJSON","JSON","parse","Exception","getListItem","Input","labelName","common_RemoveItesmfromListinJobject","ListItem","RemoveItem","count","outputData","keyName","bem","bn","create","Page","title","breadcrumbs","children","b","e","name","active","APIBasePath","window","ENV","APIURL","CICDSupport","React","Component","constructor","props","super","toggle","modalType","this","setState","modal","state","loader","loaderLoadTestScripts","checkswaggerURL","swaggerURL","feedbackswaggerURL","swaggerJsonBody","checkswaggerJsonBody","feedbackswaggerJsonBody","disableswaggerJson","swaggerSelection","disableswaggerUrl","disableSaveApi","swaggerJsonResponse","a","pageloadingStatus","GetLoaderData","selectSwaggerselection","event","item","target","value","UpdateSwaggerURL","validator","isURL","validateSwaggerURL","requestBody","selectedItem","httpBody","httpBodyContent","genericHelper","requestAPI","requestOptions","method","headers","body","stringify","fetch","Request","json","Response","success","modalValidationText","REQ","saveApiScripts","JsonBody","console","log","UpdateSwaggerJson","isJSON","render","color","height","width","timeout","visible","lg","md","sm","xs","col","for","disabled","onChange","bind","invalid","placeholder","onClick","row","style","minHeight","isOpen"],"mappings":"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","file":"static/js/27.801f82b4.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","export default\n{\n    common_deleteIteminJarrayBasedonIndex(Item,index,key) \n    {\n        try{\n            var testData = Item.filter(m => m.id !== index);\n            for(let i=index;i<=testData.length;i++)\n            {\n                testData[i-1][key]=i;\n            }\n            return testData;\n        }\n        catch(error)\n        {}\n        return Item;\n    },\n    common_AddIteminJarrayBasedonIndex(Item,index,keyList,key) \n    {\n        try{\n            var allItem=[]\n            for(let i=0;i<Number(index);i++)\n            {\n                allItem[i]= Item[i];\n            }\n            var NewItemContent ={};\n            for(let i=0;i<keyList.length;i++)\n            {\n                NewItemContent[keyList[i]]='';\n            }\n            NewItemContent[key]=Number(index)+1;\n            allItem.push(NewItemContent)\n            for(let i=Number(index);i<Item.length;i++)\n            {\n                Item[i]['id']=Number(i)+2;\n                allItem.push(Item[i]);\n            }\n            return allItem;\n        }\n        catch(error)\n        {}\n        return Item;\n    },\n\n    common_checkblankvalueinJarray(Item,key) \n    {\n        try{\n            for(let i=0;i<=Item.length;i++)\n            {\n                if(Item[i][key].trim()==='')\n                {\n                    return true\n                }\n            }\n            return false;\n        }\n        catch(error)\n        {}\n        return false;\n    },\n\n    common_CheckValueFromJson( options,checkvalue) \n    {\n     let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n    ));\n    for (let i = 0; i < allitem.length; i++) \n    {\n      if(allitem[i].trim().toLowerCase()===checkvalue.trim().toLowerCase())\n      {\n        return true;\n      }\n    }\n    return false;\n    },\n\n    common_GetListvalueFromJsonResponce(options) \n    {\n        let allitem = [];\n        try{\n            Object.keys(options).map((key) => (\n            allitem.push(options[key])\n            ));\n            }\n        catch(error)\n        {}\n        return allitem;\n    },\n    common_GetListKeyFromJsonResponce(options) \n    {\n        let allitem = []\n        Object.keys(options).map((key) => (\n        allitem.push(key)\n        ));\n        return allitem;\n    },\n\n    common_ChangeJsoncontentforServer(ItemValue)\n    {\n    try{\n        var valueaf =[];\n    if(ItemValue.includes(\"+\"))\n    {\n        valueaf = ItemValue.split('+')\n        ItemValue= valueaf.join('auplussignau')\n    }\n    if(ItemValue.includes(\":\"))\n    {\n        valueaf = ItemValue.split(':')\n        ItemValue= valueaf.join('aucolumnsignau')\n    }\n    if(ItemValue.includes(\"{\"))\n    {\n        valueaf = ItemValue.split('{')\n        ItemValue= valueaf.join('aucurlyopenbracketau')\n    }\n    if(ItemValue.includes(\"}\"))\n    {\n        valueaf = ItemValue.split('}')\n        ItemValue= valueaf.join('aucurlyclosebracketau')\n    }\n    if(ItemValue.includes(\"[\"))\n    {\n        valueaf = ItemValue.split('[')\n        ItemValue= valueaf.join('aubigopenbracketau')\n    }\n    if(ItemValue.includes(\"]\"))\n    {\n        valueaf = ItemValue.split(']')\n        ItemValue= valueaf.join('aubigclosebracketau')\n    }\n    if(ItemValue.includes('\"'))\n    {\n        valueaf = ItemValue.split('\"')\n        ItemValue= valueaf.join('audoublequotesau')\n    }\n    if(ItemValue.includes(\"=\"))\n    {\n        valueaf = ItemValue.split('=')\n        ItemValue= valueaf.join('auequalsignau')\n    }\n    }\n    catch(error)\n    {}\n    return ItemValue;\n    },\n\n    checkJsonFormat(sampleJSON)\n    {\n        if(sampleJSON.trim()==='')\n        {\n          return true;\n        }\n        try{\n         JSON.parse(sampleJSON);\n         return true;\n        }\n        catch(Exception)\n        {}\n        return false;\n    },\n    getListItem(Input,labelName)\n    {\n      let allitem = [];\n      try{\n      for(let i =0;i<Object.keys(Input).length;i++)\n      {\n          allitem.push(Input[i][labelName])\n      }\n      }\n      catch(error)\n      {}\n      return allitem;\n    },\n\n     common_RemoveItesmfromListinJobject(ListItem,RemoveItem) \n    {\n  let count = Object.keys(ListItem).length;\n  let outputData={};\n  for(let i=1;i<=count;i++)\n  {\n\tvar keyName =Object.keys(ListItem)[i-1];\n\tif(keyName.trim().toLowerCase()!==RemoveItem.trim().toLowerCase())\n\t{\n\t\toutputData[keyName]=ListItem[keyName];\n\t}\n\t\n  }\n  return outputData;\n}\n\n}\n\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import Page from 'components/Page';\nimport React from 'react';\nimport genericHelper from '../funcLibraries/GenericHelper.js';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  FormFeedback,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport validator from 'validator'\nvar APIBasePath= window.ENV.APIURL;\n\nclass CICDSupport extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state=\n    {\n        loader:false,\n        loaderLoadTestScripts:false,\n        checkswaggerURL:false,\n        swaggerURL:'',\n        feedbackswaggerURL:'',\n        swaggerJsonBody:'',\n        checkswaggerJsonBody:false,\n        feedbackswaggerJsonBody:'',\n        disableswaggerJson:true,\n        swaggerSelection:'Url',\n        disableswaggerUrl:false,\n        disableSaveApi:true,\n        swaggerJsonResponse:'',\n\n    }\n    const GetLoaderData = async () => \n    {\n      this.setState({loader:false});\n      this.setState({pageloadingStatus:false});\n    }\n    GetLoaderData()\n    \n  }\n\n  toggle = modalType => () => {\n    if (!modalType) {\n      return this.setState({\n        modal: !this.state.modal,\n      });\n    }\n\n    this.setState({\n      [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n    });\n  };\n \n  selectSwaggerselection(event)\n  {\n    var item= event.target.value;\n    if(item !== this.state.swaggerSelection)\n    {\n      this.setState({disableSaveApi:true})\n      this.setState({swaggerSelection:item});\n      if(item === 'Url')\n      {\n        this.setState({disableswaggerJson:true})\n        this.setState({disableswaggerUrl:false})\n        this.setState({swaggerJsonBody:''});\n        this.setState({checkswaggerJsonBody:false});\n      }\n      else{\n        this.setState({disableswaggerUrl:true})\n        this.setState({disableswaggerJson:false})\n        this.setState({swaggerURL:''});\n        this.setState({checkswaggerURL:false});\n        \n      }\n    }\n  }\n  UpdateSwaggerURL(event)\n  {\n    this.setState({checkswaggerURL:false});\n    this.setState({disableSaveApi:true})\n    var Item= event.target.value;\n    this.setState({swaggerURL: Item.trim()})\n    if(!validator.isURL(Item))\n    {\n        this.setState({checkswaggerURL:true});\n        return this.setState({feedbackswaggerURL:'Url is not valid'});\n    }\n    else\n    {\n      this.setState({checkswaggerURL:false});\n    }\n  }\n  validateSwaggerURL()\n  {\n      var selectedItem = this.state.swaggerSelection;\n      var id = 0;\n      var requestBody ;\n      if(selectedItem ==='Url')\n      {\n        requestBody = this.state.swaggerURL;\n        if(requestBody.trim() ==='')\n        {\n          this.setState({checkswaggerURL:true});\n          this.setState({feedbackswaggerURL:'Url can not be null'});\n          return ;\n        }\n        if(this.state.checkswaggerURL)\n        {\n          return;\n        }\n      }\n      else if(selectedItem ==='Json')\n      {\n        id=1;\n        requestBody = this.state.swaggerJsonBody;\n        if(requestBody.trim() ==='')\n        {\n          this.setState({checkswaggerJsonBody:true});\n          this.setState({feedbackswaggerJsonBody:'Json body can not be null'});\n          return ;\n        }\n        if(this.state.checkswaggerJsonBody)\n        {\n          return;\n        }\n      }\n    //@ send Request to server\n    var httpBody={};\n    httpBody['Body']=requestBody;\n    var httpBodyContent = genericHelper.common_ChangeJsoncontentforServer(httpBody);\n    var requestAPI =APIBasePath+'apiswagger/'+id;\n    var requestOptions = {\n      method: 'POST',\n      headers: {\"Accept\": \"*/*\",'Content-type': 'application/json'},\n      body: JSON.stringify(httpBodyContent)\n    };\n    const REQ = async () => \n    {\n      this.setState({swaggerJsonResponse:''});\n      this.setState({disableSaveApi:true});\n      this.setState({loader:true})\n      this.setState({pageloadingStatus:true});\n      const Request = await fetch(requestAPI,requestOptions);\n      const Response = await Request.json();\n      if(Response.success)\n      {\n        this.setState({swaggerJsonResponse:Response['Json']})\n        this.setState({disableSaveApi:false});\n      }\n      this.setState({loader:false})\n      this.setState({pageloadingStatus:false});\n      this.setState({modal:true})\n      return this.setState({modalValidationText:Response['Message']});\n    }\n    REQ();\n  }\n  saveApiScripts()\n  {\n      var JsonBody = this.state.swaggerJsonResponse;\n      console.log(JsonBody);\n      if(JsonBody.length ==0)\n      {\n        this.setState({modal:true});\n        return this.setState({modalValidationText:'Unable to create API scripts becuase Swagger Json is not correct format.'});\n      }\n          //@ send Request to server\n    var httpBody={};\n    httpBody['Body']=JsonBody;\n    var httpBodyContent = genericHelper.common_ChangeJsoncontentforServer(httpBody);\n    var requestAPI =APIBasePath+'apiswagger';\n    var requestOptions = {\n      method: 'POST',\n      headers: {\"Accept\": \"*/*\",'Content-type': 'application/json'},\n      body: JSON.stringify(httpBodyContent)\n    };\n      const REQ = async () => \n      {\n        this.setState({swaggerJsonResponse:''});\n        this.setState({disableSaveApi:true});\n        this.setState({loader:true})\n        this.setState({pageloadingStatus:true});\n        const Request = await fetch(requestAPI,requestOptions);\n        const Response = await Request.json();\n        if(Response.success)\n        {\n          this.setState({swaggerJsonResponse:Response['Json']})\n          this.setState({disableSaveApi:false});\n        }\n        this.setState({loader:false})\n        this.setState({pageloadingStatus:false});\n        this.setState({modal:true})\n        return this.setState({modalValidationText:Response['Message']});\n      }\n      REQ();\n  }\n  UpdateSwaggerJson(event)\n  {\n    this.setState({checkswaggerJsonBody:false});\n    this.setState({disableSaveApi:true})\n    var Item= event.target.value;\n    this.setState({swaggerJsonBody: Item.trim()})\n    if(!validator.isJSON(Item))\n    {\n        this.setState({checkswaggerJsonBody:true});\n        return this.setState({feedbackswaggerJsonBody:'Json content is not valid'});\n    }\n    else\n    {\n      this.setState({checkswaggerJsonBody:false});\n    }\n  }\n  render() {\n    const textareaModal = {\n      minHeight:'212px'};\n  return (\n    <Page title=\"API script using Swagger\" breadcrumbs={[{ name: 'API script Development using Swagger', active: true }]}>\n      <Loader \n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={50}\n        width={100}\n        timeout={120000} //3 secs\n        visible = {this.state.loader}\n      />\n      <Row>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Import Scripts</CardHeader>\n              <CardBody>\n              <Form >\n              <FormGroup col>\n\t\t\t          \t<Label for=\"exampleSelect\" sm={5}>\n                   Select Swagger*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.pageloadingStatus}  value={this.state.swaggerSelection}  type=\"select\" name=\"swaggerselection\" onChange={this.selectSwaggerselection.bind(this)}>\n                    <option>Url</option>\n                    <option>Json</option>\n                    </Input>\n                  </Col>\n                </FormGroup>{' '}\n\t\t\t\t       <FormGroup col>\n\t\t\t          \t<Label for=\"exampleSelect\" sm={5}>\n                    Swagger Json URL*\n                  </Label>\n                  <Col >\n                    <Input disabled={this.state.disableswaggerUrl} invalid={this.state.checkswaggerURL}  value={this.state.swaggerURL}  type=\"input\" name=\"fromemail\" onChange={this.UpdateSwaggerURL.bind(this)} placeholder=\"https://example/swagger/v1/swagger.json\"/>\n                    <FormFeedback>\n                      {this.state.feedbackswaggerURL}\n                    </FormFeedback>\n                  </Col>\n                </FormGroup>{' '}\n                <FormGroup col>\n                  <Col>\n                  <Button disabled={this.state.pageloadingStatus} onClick={this.validateSwaggerURL.bind(this)} color=\"secondary\" name =\"validate\">Validate</Button>\n                  <Button disabled={this.state.disableSaveApi} onClick={this.saveApiScripts.bind(this)} color=\"secondary\" name =\"save\">Create API Scripts</Button>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Paste Swagger JSON content</CardHeader>\n              <CardBody>\n              <Form >\n              <FormGroup row>\n                  <Col>\n                    <Input disabled={this.state.disableswaggerJson} invalid={this.state.checkswaggerJsonBody} onChange={this.UpdateSwaggerJson.bind(this)} style ={textareaModal} type=\"textarea\" name=\"swaggerJsonvalue\" value ={this.state.swaggerJsonBody} >\n\t\t\t\t\t          </Input>\n                    <FormFeedback>\n                      {this.state.feedbackswaggerJsonBody}\n                   </FormFeedback>\n                  </Col>\n                </FormGroup>\n              </Form>\n              <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggle()}\n                  className={this.props.className}>\n                  <ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n                  <ModalBody >\n                    {this.state.modalValidationText}\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"secondary\" onClick={this.toggle()}>\n                      OK\n                    </Button>\n                  </ModalFooter>\n                </Modal>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n    );\n  }\n};\n\nexport default CICDSupport;\n"],"sourceRoot":""}